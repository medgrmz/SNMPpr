{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridStateInitialization = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _utils = require(\"../utils\");\nvar _utils2 = require(\"../../utils/utils\");\nconst useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if ((0, _utils2.isFunction)(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    const apiRefWithNewState = {\n      current: {\n        state: newState\n      }\n    };\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef);\n      const newSubState = controlState.stateSelector(apiRefWithNewState);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(apiRefWithNewState);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return (0, _extends2.default)({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const publicStateApi = {\n    setState\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  (0, _utils.useGridApiMethod)(apiRef, publicStateApi, 'public');\n  (0, _utils.useGridApiMethod)(apiRef, privateStateApi, 'private');\n};\nexports.useGridStateInitialization = useGridStateInitialization;","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","useGridStateInitialization","_extends2","React","_utils","_utils2","apiRef","controlStateMapRef","useRef","registerControlState","useCallback","controlStateItem","current","stateId","setState","state","reason","newState","isFunction","apiRefWithNewState","ignoreSetState","updatedControlStateIds","keys","forEach","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","undefined","length","Error","map","el","join","publishEvent","store","update","model","propOnChange","api","changeEvent","updateControlState","key","previousState","publicStateApi","privateStateApi","useGridApiMethod"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridStateInitialization = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _utils = require(\"../utils\");\nvar _utils2 = require(\"../../utils/utils\");\nconst useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if ((0, _utils2.isFunction)(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    const apiRefWithNewState = {\n      current: {\n        state: newState\n      }\n    };\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef);\n      const newSubState = controlState.stateSelector(apiRefWithNewState);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(apiRefWithNewState);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return (0, _extends2.default)({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const publicStateApi = {\n    setState\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  (0, _utils.useGridApiMethod)(apiRef, publicStateApi, 'public');\n  (0, _utils.useGridApiMethod)(apiRef, privateStateApi, 'private');\n};\nexports.useGridStateInitialization = useGridStateInitialization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}