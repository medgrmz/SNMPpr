{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridPaginationModel = exports.getDerivedPaginationModel = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _isDeepEqual = require(\"@mui/x-internals/isDeepEqual\");\nvar _gridFilterSelector = require(\"../filter/gridFilterSelector\");\nvar _density = require(\"../density\");\nvar _utils = require(\"../../utils\");\nvar _pipeProcessing = require(\"../../core/pipeProcessing\");\nvar _gridPaginationSelector = require(\"./gridPaginationSelector\");\nvar _gridPaginationUtils = require(\"./gridPaginationUtils\");\nconst getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = (0, _gridPaginationUtils.getPageCount)(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = pageSize === -1 ? 0 : (0, _gridPaginationUtils.getValidPage)(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = (0, _extends2.default)({}, paginationModel, {\n      page: validPage\n    });\n  }\n  (0, _gridPaginationUtils.throwIfPageSizeExceedsTheLimit)(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexports.getDerivedPaginationModel = getDerivedPaginationModel;\nconst useGridPaginationModel = (apiRef, props) => {\n  const logger = (0, _utils.useGridLogger)(apiRef, 'useGridPaginationModel');\n  const densityFactor = (0, _utils.useGridSelector)(apiRef, _density.gridDensityFactorSelector);\n  const previousFilterModel = React.useRef((0, _gridFilterSelector.gridFilterModelSelector)(apiRef));\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: _gridPaginationSelector.gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      pagination: (0, _extends2.default)({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }), 'setPaginationModel');\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  (0, _utils.useGridApiMethod)(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== (0, _gridPaginationUtils.defaultPageSize)(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return (0, _extends2.default)({}, prevState, {\n      pagination: (0, _extends2.default)({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? (0, _extends2.default)({}, (0, _gridPaginationUtils.getDefaultGridPaginationModel)(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      pagination: (0, _extends2.default)({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }), 'stateRestorePreProcessing');\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  (0, _pipeProcessing.useGridRegisterPipeProcessor)(apiRef, 'exportState', stateExportPreProcessing);\n  (0, _pipeProcessing.useGridRegisterPipeProcessor)(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (paginationModel.page === 0) {\n      return;\n    }\n    const pageCount = (0, _gridPaginationSelector.gridPageCountSelector)(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n\n  /**\n   * Goes to the first row of the grid\n   */\n  const navigateToStart = React.useCallback(() => {\n    const paginationModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (paginationModel.page !== 0) {\n      apiRef.current.setPage(0);\n    }\n\n    // If the page was not changed it might be needed to scroll to the top\n    const scrollPosition = apiRef.current.getScrollPosition();\n    if (scrollPosition.top !== 0) {\n      apiRef.current.scroll({\n        top: 0\n      });\n    }\n  }, [apiRef]);\n\n  /**\n   * Resets the page only if the active items or quick filter has changed from the last time.\n   * This is to avoid resetting the page when the filter model is changed\n   * because of and update of the operator from an item that does not have the value\n   * or reseting when the filter panel is just opened\n   */\n  const handleFilterModelChange = React.useCallback(filterModel => {\n    const currentActiveFilters = (0, _extends2.default)({}, filterModel, {\n      // replace items with the active items\n      items: (0, _gridFilterSelector.gridFilterActiveItemsSelector)(apiRef)\n    });\n    if ((0, _isDeepEqual.isDeepEqual)(currentActiveFilters, previousFilterModel.current)) {\n      return;\n    }\n    previousFilterModel.current = currentActiveFilters;\n    navigateToStart();\n  }, [apiRef, navigateToStart]);\n  (0, _utils.useGridEvent)(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  (0, _utils.useGridEvent)(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  (0, _utils.useGridEvent)(apiRef, 'rowCountChange', handleRowCountChange);\n  (0, _utils.useGridEvent)(apiRef, 'sortModelChange', navigateToStart);\n  (0, _utils.useGridEvent)(apiRef, 'filterModelChange', handleFilterModelChange);\n\n  /**\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    if (!props.pagination) {\n      return;\n    }\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      pagination: (0, _extends2.default)({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.signature, props.pagination]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const isEnabled = props.pagination === true;\n      if (state.pagination.paginationMode === props.paginationMode || state.pagination.enabled === isEnabled) {\n        return state;\n      }\n      return (0, _extends2.default)({}, state, {\n        pagination: (0, _extends2.default)({}, state.pagination, {\n          paginationMode: props.paginationMode,\n          enabled: props.pagination === true\n        })\n      });\n    });\n  }, [apiRef, props.paginationMode, props.pagination]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};\nexports.useGridPaginationModel = useGridPaginationModel;","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","useGridPaginationModel","getDerivedPaginationModel","_extends2","React","_isDeepEqual","_gridFilterSelector","_density","_utils","_pipeProcessing","_gridPaginationSelector","_gridPaginationUtils","paginationState","signature","paginationModelProp","paginationModel","rowCount","pageSize","page","pageCount","getPageCount","validPage","getValidPage","throwIfPageSizeExceedsTheLimit","apiRef","props","logger","useGridLogger","densityFactor","useGridSelector","gridDensityFactorSelector","previousFilterModel","useRef","gridFilterModelSelector","rowHeight","Math","floor","current","registerControlState","stateId","propModel","propOnChange","onPaginationModelChange","stateSelector","gridPaginationModelSelector","changeEvent","setPage","useCallback","currentModel","debug","setPaginationModel","setPageSize","setState","state","pagination","paginationModelApi","useGridApiMethod","stateExportPreProcessing","prevState","context","shouldExportPaginationModel","exportOnlyDirtyModels","initialState","defaultPageSize","autoPageSize","stateRestorePreProcessing","params","stateToRestore","getDefaultGridPaginationModel","useGridRegisterPipeProcessor","handlePaginationModelChange","virtualScrollerRef","scrollToIndexes","rowIndex","handleUpdateAutoPageSize","dimensions","getRootDimensions","maximumPageSizeWithoutScrollBar","viewportInnerSize","height","handleRowCountChange","newRowCount","gridPageCountSelector","max","navigateToStart","scrollPosition","getScrollPosition","top","scroll","handleFilterModelChange","filterModel","currentActiveFilters","items","gridFilterActiveItemsSelector","isDeepEqual","useGridEvent","isFirstRender","useEffect","isEnabled","paginationMode","enabled"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridPaginationModel = exports.getDerivedPaginationModel = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _isDeepEqual = require(\"@mui/x-internals/isDeepEqual\");\nvar _gridFilterSelector = require(\"../filter/gridFilterSelector\");\nvar _density = require(\"../density\");\nvar _utils = require(\"../../utils\");\nvar _pipeProcessing = require(\"../../core/pipeProcessing\");\nvar _gridPaginationSelector = require(\"./gridPaginationSelector\");\nvar _gridPaginationUtils = require(\"./gridPaginationUtils\");\nconst getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = (0, _gridPaginationUtils.getPageCount)(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = pageSize === -1 ? 0 : (0, _gridPaginationUtils.getValidPage)(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = (0, _extends2.default)({}, paginationModel, {\n      page: validPage\n    });\n  }\n  (0, _gridPaginationUtils.throwIfPageSizeExceedsTheLimit)(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexports.getDerivedPaginationModel = getDerivedPaginationModel;\nconst useGridPaginationModel = (apiRef, props) => {\n  const logger = (0, _utils.useGridLogger)(apiRef, 'useGridPaginationModel');\n  const densityFactor = (0, _utils.useGridSelector)(apiRef, _density.gridDensityFactorSelector);\n  const previousFilterModel = React.useRef((0, _gridFilterSelector.gridFilterModelSelector)(apiRef));\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: _gridPaginationSelector.gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      pagination: (0, _extends2.default)({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }), 'setPaginationModel');\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  (0, _utils.useGridApiMethod)(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== (0, _gridPaginationUtils.defaultPageSize)(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return (0, _extends2.default)({}, prevState, {\n      pagination: (0, _extends2.default)({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? (0, _extends2.default)({}, (0, _gridPaginationUtils.getDefaultGridPaginationModel)(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      pagination: (0, _extends2.default)({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }), 'stateRestorePreProcessing');\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  (0, _pipeProcessing.useGridRegisterPipeProcessor)(apiRef, 'exportState', stateExportPreProcessing);\n  (0, _pipeProcessing.useGridRegisterPipeProcessor)(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (paginationModel.page === 0) {\n      return;\n    }\n    const pageCount = (0, _gridPaginationSelector.gridPageCountSelector)(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n\n  /**\n   * Goes to the first row of the grid\n   */\n  const navigateToStart = React.useCallback(() => {\n    const paginationModel = (0, _gridPaginationSelector.gridPaginationModelSelector)(apiRef);\n    if (paginationModel.page !== 0) {\n      apiRef.current.setPage(0);\n    }\n\n    // If the page was not changed it might be needed to scroll to the top\n    const scrollPosition = apiRef.current.getScrollPosition();\n    if (scrollPosition.top !== 0) {\n      apiRef.current.scroll({\n        top: 0\n      });\n    }\n  }, [apiRef]);\n\n  /**\n   * Resets the page only if the active items or quick filter has changed from the last time.\n   * This is to avoid resetting the page when the filter model is changed\n   * because of and update of the operator from an item that does not have the value\n   * or reseting when the filter panel is just opened\n   */\n  const handleFilterModelChange = React.useCallback(filterModel => {\n    const currentActiveFilters = (0, _extends2.default)({}, filterModel, {\n      // replace items with the active items\n      items: (0, _gridFilterSelector.gridFilterActiveItemsSelector)(apiRef)\n    });\n    if ((0, _isDeepEqual.isDeepEqual)(currentActiveFilters, previousFilterModel.current)) {\n      return;\n    }\n    previousFilterModel.current = currentActiveFilters;\n    navigateToStart();\n  }, [apiRef, navigateToStart]);\n  (0, _utils.useGridEvent)(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  (0, _utils.useGridEvent)(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  (0, _utils.useGridEvent)(apiRef, 'rowCountChange', handleRowCountChange);\n  (0, _utils.useGridEvent)(apiRef, 'sortModelChange', navigateToStart);\n  (0, _utils.useGridEvent)(apiRef, 'filterModelChange', handleFilterModelChange);\n\n  /**\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    if (!props.pagination) {\n      return;\n    }\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      pagination: (0, _extends2.default)({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.signature, props.pagination]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const isEnabled = props.pagination === true;\n      if (state.pagination.paginationMode === props.paginationMode || state.pagination.enabled === isEnabled) {\n        return state;\n      }\n      return (0, _extends2.default)({}, state, {\n        pagination: (0, _extends2.default)({}, state.pagination, {\n          paginationMode: props.paginationMode,\n          enabled: props.pagination === true\n        })\n      });\n    });\n  }, [apiRef, props.paginationMode, props.pagination]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};\nexports.useGridPaginationModel = useGridPaginationModel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}