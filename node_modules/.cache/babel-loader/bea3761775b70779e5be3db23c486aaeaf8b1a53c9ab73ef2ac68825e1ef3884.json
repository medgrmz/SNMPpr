{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI GF75 THIN 10SC\\\\OneDrive\\\\Bureau\\\\fffffffff\\\\src\\\\pages\\\\Devices.jsx\";\nimport React from 'react';\nimport { Grid, Paper, Typography, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Devices = () => {\n  const devices = [{\n    name: 'Firewall',\n    type: 'Network Security',\n    status: 'Active',\n    ip: '192.168.1.1'\n  }, {\n    name: 'Switch',\n    type: 'Network Device',\n    status: 'Active',\n    ip: '192.168.1.2'\n  }, {\n    name: 'Windows Server',\n    type: 'Server',\n    status: 'Active',\n    ip: '192.168.1.3'\n  }, {\n    name: 'Endpoint 1',\n    type: 'Workstation',\n    status: 'Active',\n    ip: '192.168.1.4'\n  }, {\n    name: 'Endpoint 2',\n    type: 'Workstation',\n    status: 'Active',\n    ip: '192.168.1.5'\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Device Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"IP Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: devices.map(device => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: device.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: device.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: device.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: device.ip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this)]\n            }, device.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Devices;\nexport default Devices;\nvar _c;\n$RefreshReg$(_c, \"Devices\");","map":{"version":3,"names":["React","Grid","Paper","Typography","Table","TableBody","TableCell","TableHead","TableRow","jsxDEV","_jsxDEV","Devices","devices","name","type","status","ip","container","spacing","children","item","xs","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","sx","p","map","device","_c","$RefreshReg$"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/src/pages/Devices.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Grid, Paper, Typography, Table, TableBody, TableCell, TableHead, TableRow } from '@mui/material';\r\n\r\nconst Devices = () => {\r\n  const devices = [\r\n    { name: 'Firewall', type: 'Network Security', status: 'Active', ip: '192.168.1.1' },\r\n    { name: 'Switch', type: 'Network Device', status: 'Active', ip: '192.168.1.2' },\r\n    { name: 'Windows Server', type: 'Server', status: 'Active', ip: '192.168.1.3' },\r\n    { name: 'Endpoint 1', type: 'Workstation', status: 'Active', ip: '192.168.1.4' },\r\n    { name: 'Endpoint 2', type: 'Workstation', status: 'Active', ip: '192.168.1.5' },\r\n  ];\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h4\" gutterBottom>Devices</Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper sx={{ p: 2 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Device Name</TableCell>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>IP Address</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {devices.map((device) => (\r\n                <TableRow key={device.name}>\r\n                  <TableCell>{device.name}</TableCell>\r\n                  <TableCell>{device.type}</TableCell>\r\n                  <TableCell>{device.status}</TableCell>\r\n                  <TableCell>{device.ip}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Devices;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}