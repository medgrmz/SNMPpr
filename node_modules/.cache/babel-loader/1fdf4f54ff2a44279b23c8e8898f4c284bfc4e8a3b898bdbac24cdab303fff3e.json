{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridScroll = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _RtlProvider = require(\"@mui/system/RtlProvider\");\nvar _useGridLogger = require(\"../../utils/useGridLogger\");\nvar _gridColumnsSelector = require(\"../columns/gridColumnsSelector\");\nvar _useGridSelector = require(\"../../utils/useGridSelector\");\nvar _gridPaginationSelector = require(\"../pagination/gridPaginationSelector\");\nvar _gridRowsSelector = require(\"../rows/gridRowsSelector\");\nvar _gridRowsMetaSelector = require(\"../rows/gridRowsMetaSelector\");\nvar _useGridApiMethod = require(\"../../utils/useGridApiMethod\");\nvar _gridFilterSelector = require(\"../filter/gridFilterSelector\");\nvar _dimensions = require(\"../dimensions\");\nvar _gridListViewSelectors = require(\"../listView/gridListViewSelectors\");\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nconst useGridScroll = (apiRef, props) => {\n  const isRtl = (0, _RtlProvider.useRtl)();\n  const logger = (0, _useGridLogger.useGridLogger)(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = (0, _useGridSelector.useGridSelector)(apiRef, _gridFilterSelector.gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = (0, _dimensions.gridDimensionsSelector)(apiRef);\n    const totalRowCount = (0, _gridRowsSelector.gridRowCountSelector)(apiRef);\n    const visibleColumns = props.listView ? [(0, _gridListViewSelectors.gridListColumnSelector)(apiRef)] : (0, _gridColumnsSelector.gridVisibleColumnDefinitionsSelector)(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = (0, _gridColumnsSelector.gridColumnPositionsSelector)(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = (0, _gridRowsMetaSelector.gridRowsMetaSelector)(apiRef);\n      const page = (0, _gridPaginationSelector.gridPageSelector)(apiRef);\n      const pageSize = (0, _gridPaginationSelector.gridPageSizeSelector)(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  (0, _useGridApiMethod.useGridApiMethod)(apiRef, scrollApi, 'public');\n};\nexports.useGridScroll = useGridScroll;","map":{"version":3,"names":["_interopRequireWildcard","require","default","Object","defineProperty","exports","value","useGridScroll","React","_RtlProvider","_useGridLogger","_gridColumnsSelector","_useGridSelector","_gridPaginationSelector","_gridRowsSelector","_gridRowsMetaSelector","_useGridApiMethod","_gridFilterSelector","_dimensions","_gridListViewSelectors","scrollIntoView","dimensions","containerSize","scrollPosition","elementSize","elementOffset","elementEnd","undefined","apiRef","props","isRtl","useRtl","logger","useGridLogger","colRef","current","columnHeadersContainerRef","virtualScrollerRef","visibleSortedRows","useGridSelector","gridExpandedSortedRowEntriesSelector","scrollToIndexes","useCallback","params","gridDimensionsSelector","totalRowCount","gridRowCountSelector","visibleColumns","listView","gridListColumnSelector","gridVisibleColumnDefinitionsSelector","scrollToHeader","rowIndex","length","debug","colIndex","scrollCoordinates","columnPositions","gridColumnPositionsSelector","cellWidth","rowId","id","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","cellProps","width","computedWidth","left","viewportOuterSize","Math","abs","scrollLeft","rowsMeta","gridRowsMetaSelector","page","gridPageSelector","pageSize","gridPageSizeSelector","elementIndex","pagination","targetOffsetHeight","positions","currentPageTotalHeight","top","viewportInnerSize","height","scrollTop","unstable_applyPipeProcessors","scroll","direction","getScrollPosition","scrollApi","useGridApiMethod"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridScroll = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _RtlProvider = require(\"@mui/system/RtlProvider\");\nvar _useGridLogger = require(\"../../utils/useGridLogger\");\nvar _gridColumnsSelector = require(\"../columns/gridColumnsSelector\");\nvar _useGridSelector = require(\"../../utils/useGridSelector\");\nvar _gridPaginationSelector = require(\"../pagination/gridPaginationSelector\");\nvar _gridRowsSelector = require(\"../rows/gridRowsSelector\");\nvar _gridRowsMetaSelector = require(\"../rows/gridRowsMetaSelector\");\nvar _useGridApiMethod = require(\"../../utils/useGridApiMethod\");\nvar _gridFilterSelector = require(\"../filter/gridFilterSelector\");\nvar _dimensions = require(\"../dimensions\");\nvar _gridListViewSelectors = require(\"../listView/gridListViewSelectors\");\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nconst useGridScroll = (apiRef, props) => {\n  const isRtl = (0, _RtlProvider.useRtl)();\n  const logger = (0, _useGridLogger.useGridLogger)(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = (0, _useGridSelector.useGridSelector)(apiRef, _gridFilterSelector.gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = (0, _dimensions.gridDimensionsSelector)(apiRef);\n    const totalRowCount = (0, _gridRowsSelector.gridRowCountSelector)(apiRef);\n    const visibleColumns = props.listView ? [(0, _gridListViewSelectors.gridListColumnSelector)(apiRef)] : (0, _gridColumnsSelector.gridVisibleColumnDefinitionsSelector)(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = (0, _gridColumnsSelector.gridColumnPositionsSelector)(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = (0, _gridRowsMetaSelector.gridRowsMetaSelector)(apiRef);\n      const page = (0, _gridPaginationSelector.gridPageSelector)(apiRef);\n      const pageSize = (0, _gridPaginationSelector.gridPageSizeSelector)(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  (0, _useGridApiMethod.useGridApiMethod)(apiRef, scrollApi, 'public');\n};\nexports.useGridScroll = useGridScroll;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}