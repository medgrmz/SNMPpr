{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GridColumnMenuHideItem = GridColumnMenuHideItem;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _useGridApiContext = require(\"../../../../hooks/utils/useGridApiContext\");\nvar _useGridRootProps = require(\"../../../../hooks/utils/useGridRootProps\");\nvar _columns = require(\"../../../../hooks/features/columns\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = (0, _useGridApiContext.useGridApiContext)();\n  const rootProps = (0, _useGridRootProps.useGridRootProps)();\n  const visibleColumns = (0, _columns.gridVisibleColumnDefinitionsSelector)(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.baseMenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    iconStart: /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.columnMenuHideIcon, {\n      fontSize: \"small\"\n    }),\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: _propTypes.default.object.isRequired,\n  onClick: _propTypes.default.func.isRequired\n} : void 0;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","GridColumnMenuHideItem","React","_propTypes","_useGridApiContext","_useGridRootProps","_columns","_jsxRuntime","props","colDef","onClick","apiRef","useGridApiContext","rootProps","useGridRootProps","visibleColumns","gridVisibleColumnDefinitionsSelector","columnsWithMenu","filter","col","disableColumnMenu","disabled","length","toggleColumn","useCallback","event","current","setColumnVisibility","field","disableColumnSelector","hideable","jsx","slots","baseMenuItem","iconStart","columnMenuHideIcon","fontSize","children","getLocaleText","process","env","NODE_ENV","propTypes","object","isRequired","func"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GridColumnMenuHideItem = GridColumnMenuHideItem;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _useGridApiContext = require(\"../../../../hooks/utils/useGridApiContext\");\nvar _useGridRootProps = require(\"../../../../hooks/utils/useGridRootProps\");\nvar _columns = require(\"../../../../hooks/features/columns\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = (0, _useGridApiContext.useGridApiContext)();\n  const rootProps = (0, _useGridRootProps.useGridRootProps)();\n  const visibleColumns = (0, _columns.gridVisibleColumnDefinitionsSelector)(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.baseMenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    iconStart: /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.columnMenuHideIcon, {\n      fontSize: \"small\"\n    }),\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: _propTypes.default.object.isRequired,\n  onClick: _propTypes.default.func.isRequired\n} : void 0;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAACC,OAAO;AAC5F,IAAIC,uBAAuB,GAAGF,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAC9FE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,sBAAsB,GAAGA,sBAAsB;AACvD,IAAIC,KAAK,GAAGN,uBAAuB,CAACF,OAAO,CAAC,OAAO,CAAC,CAAC;AACrD,IAAIS,UAAU,GAAGV,sBAAsB,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;AAC9D,IAAIU,kBAAkB,GAAGV,OAAO,CAAC,2CAA2C,CAAC;AAC7E,IAAIW,iBAAiB,GAAGX,OAAO,CAAC,0CAA0C,CAAC;AAC3E,IAAIY,QAAQ,GAAGZ,OAAO,CAAC,oCAAoC,CAAC;AAC5D,IAAIa,WAAW,GAAGb,OAAO,CAAC,mBAAmB,CAAC;AAC9C,SAASO,sBAAsBA,CAACO,KAAK,EAAE;EACrC,MAAM;IACJC,MAAM;IACNC;EACF,CAAC,GAAGF,KAAK;EACT,MAAMG,MAAM,GAAG,CAAC,CAAC,EAAEP,kBAAkB,CAACQ,iBAAiB,EAAE,CAAC;EAC1D,MAAMC,SAAS,GAAG,CAAC,CAAC,EAAER,iBAAiB,CAACS,gBAAgB,EAAE,CAAC;EAC3D,MAAMC,cAAc,GAAG,CAAC,CAAC,EAAET,QAAQ,CAACU,oCAAoC,EAAEL,MAAM,CAAC;EACjF,MAAMM,eAAe,GAAGF,cAAc,CAACG,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,iBAAiB,KAAK,IAAI,CAAC;EACpF;EACA,MAAMC,QAAQ,GAAGJ,eAAe,CAACK,MAAM,KAAK,CAAC;EAC7C,MAAMC,YAAY,GAAGrB,KAAK,CAACsB,WAAW,CAACC,KAAK,IAAI;IAC9C;AACJ;AACA;AACA;AACA;IACI,IAAIJ,QAAQ,EAAE;MACZ;IACF;IACAV,MAAM,CAACe,OAAO,CAACC,mBAAmB,CAAClB,MAAM,CAACmB,KAAK,EAAE,KAAK,CAAC;IACvDlB,OAAO,CAACe,KAAK,CAAC;EAChB,CAAC,EAAE,CAACd,MAAM,EAAEF,MAAM,CAACmB,KAAK,EAAElB,OAAO,EAAEW,QAAQ,CAAC,CAAC;EAC7C,IAAIR,SAAS,CAACgB,qBAAqB,EAAE;IACnC,OAAO,IAAI;EACb;EACA,IAAIpB,MAAM,CAACqB,QAAQ,KAAK,KAAK,EAAE;IAC7B,OAAO,IAAI;EACb;EACA,OAAO,aAAa,CAAC,CAAC,EAAEvB,WAAW,CAACwB,GAAG,EAAElB,SAAS,CAACmB,KAAK,CAACC,YAAY,EAAE;IACrEvB,OAAO,EAAEa,YAAY;IACrBF,QAAQ,EAAEA,QAAQ;IAClBa,SAAS,EAAE,aAAa,CAAC,CAAC,EAAE3B,WAAW,CAACwB,GAAG,EAAElB,SAAS,CAACmB,KAAK,CAACG,kBAAkB,EAAE;MAC/EC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACFC,QAAQ,EAAE1B,MAAM,CAACe,OAAO,CAACY,aAAa,CAAC,sBAAsB;EAC/D,CAAC,CAAC;AACJ;AACAC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGxC,sBAAsB,CAACyC,SAAS,GAAG;EACzE;EACA;EACA;EACA;EACAjC,MAAM,EAAEN,UAAU,CAACR,OAAO,CAACgD,MAAM,CAACC,UAAU;EAC5ClC,OAAO,EAAEP,UAAU,CAACR,OAAO,CAACkD,IAAI,CAACD;AACnC,CAAC,GAAG,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}