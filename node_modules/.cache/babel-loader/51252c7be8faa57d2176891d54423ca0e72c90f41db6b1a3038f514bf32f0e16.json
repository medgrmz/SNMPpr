{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GridSkeletonCell = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _utils = require(\"@mui/utils\");\nvar _fastMemo = require(\"@mui/x-internals/fastMemo\");\nvar _utils2 = require(\"../../utils/utils\");\nvar _useGridRootProps = require(\"../../hooks/utils/useGridRootProps\");\nvar _gridClasses = require(\"../../constants/gridClasses\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? (0, _utils.unstable_capitalize)(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return (0, _utils.unstable_composeClasses)(slots, _gridClasses.getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = (0, _utils2.createRandomNumberGenerator)(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  const rootProps = (0, _useGridRootProps.useGridRootProps)();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", (0, _extends2.default)({\n    \"data-field\": field,\n    className: (0, _clsx.default)(classes.root, className),\n    style: (0, _extends2.default)({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.baseSkeleton, (0, _extends2.default)({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: _propTypes.default.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: _propTypes.default.bool,\n  field: _propTypes.default.string,\n  height: _propTypes.default.oneOfType([_propTypes.default.oneOf(['auto']), _propTypes.default.number]),\n  type: _propTypes.default.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])\n} : void 0;\nconst Memoized = exports.GridSkeletonCell = (0, _fastMemo.fastMemo)(GridSkeletonCell);","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","GridSkeletonCell","_extends2","_objectWithoutPropertiesLoose2","React","_propTypes","_clsx","_utils","_fastMemo","_utils2","_useGridRootProps","_gridClasses","_jsxRuntime","_excluded","CIRCULAR_CONTENT_SIZE","CONTENT_HEIGHT","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","number","string","date","dateTime","singleSelect","useUtilityClasses","ownerState","align","classes","empty","slots","root","unstable_capitalize","unstable_composeClasses","getDataGridUtilityClass","randomNumberGenerator","createRandomNumberGenerator","props","field","type","width","height","style","className","other","rootProps","useGridRootProps","skeletonProps","useMemo","isCircularContent","variant","min","max","Math","round","jsx","maxWidth","minWidth","children","baseSkeleton","process","env","NODE_ENV","propTypes","bool","oneOfType","oneOf","Memoized","fastMemo"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GridSkeletonCell = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _utils = require(\"@mui/utils\");\nvar _fastMemo = require(\"@mui/x-internals/fastMemo\");\nvar _utils2 = require(\"../../utils/utils\");\nvar _useGridRootProps = require(\"../../hooks/utils/useGridRootProps\");\nvar _gridClasses = require(\"../../constants/gridClasses\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? (0, _utils.unstable_capitalize)(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return (0, _utils.unstable_composeClasses)(slots, _gridClasses.getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = (0, _utils2.createRandomNumberGenerator)(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  const rootProps = (0, _useGridRootProps.useGridRootProps)();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", (0, _extends2.default)({\n    \"data-field\": field,\n    className: (0, _clsx.default)(classes.root, className),\n    style: (0, _extends2.default)({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/(0, _jsxRuntime.jsx)(rootProps.slots.baseSkeleton, (0, _extends2.default)({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: _propTypes.default.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: _propTypes.default.bool,\n  field: _propTypes.default.string,\n  height: _propTypes.default.oneOfType([_propTypes.default.oneOf(['auto']), _propTypes.default.number]),\n  type: _propTypes.default.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])\n} : void 0;\nconst Memoized = exports.GridSkeletonCell = (0, _fastMemo.fastMemo)(GridSkeletonCell);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}