{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.throwIfPageSizeExceedsTheLimit = exports.getValidPage = exports.getPageCount = exports.getDefaultGridPaginationModel = exports.defaultPageSize = void 0;\nvar _signature = require(\"../../../constants/signature\");\nconst MAX_PAGE_SIZE = 100;\nconst defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexports.defaultPageSize = defaultPageSize;\nconst getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexports.getPageCount = getPageCount;\nconst getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexports.getDefaultGridPaginationModel = getDefaultGridPaginationModel;\nconst getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexports.getValidPage = getValidPage;\nconst throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === _signature.GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};\nexports.throwIfPageSizeExceedsTheLimit = throwIfPageSizeExceedsTheLimit;","map":{"version":3,"names":["Object","defineProperty","exports","value","throwIfPageSizeExceedsTheLimit","getValidPage","getPageCount","getDefaultGridPaginationModel","defaultPageSize","_signature","require","MAX_PAGE_SIZE","autoPageSize","rowCount","pageSize","page","Math","ceil","pageCount","max","min","signatureProp","GridSignature","DataGrid","Error","join"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.throwIfPageSizeExceedsTheLimit = exports.getValidPage = exports.getPageCount = exports.getDefaultGridPaginationModel = exports.defaultPageSize = void 0;\nvar _signature = require(\"../../../constants/signature\");\nconst MAX_PAGE_SIZE = 100;\nconst defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexports.defaultPageSize = defaultPageSize;\nconst getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexports.getPageCount = getPageCount;\nconst getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexports.getDefaultGridPaginationModel = getDefaultGridPaginationModel;\nconst getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexports.getValidPage = getValidPage;\nconst throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === _signature.GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};\nexports.throwIfPageSizeExceedsTheLimit = throwIfPageSizeExceedsTheLimit;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,8BAA8B,GAAGF,OAAO,CAACG,YAAY,GAAGH,OAAO,CAACI,YAAY,GAAGJ,OAAO,CAACK,6BAA6B,GAAGL,OAAO,CAACM,eAAe,GAAG,KAAK,CAAC;AAC/J,IAAIC,UAAU,GAAGC,OAAO,CAAC,8BAA8B,CAAC;AACxD,MAAMC,aAAa,GAAG,GAAG;AACzB,MAAMH,eAAe,GAAGI,YAAY,IAAIA,YAAY,GAAG,CAAC,GAAG,GAAG;AAC9DV,OAAO,CAACM,eAAe,GAAGA,eAAe;AACzC,MAAMF,YAAY,GAAGA,CAACO,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EACjD,IAAID,QAAQ,GAAG,CAAC,IAAID,QAAQ,GAAG,CAAC,EAAE;IAChC,OAAOG,IAAI,CAACC,IAAI,CAACJ,QAAQ,GAAGC,QAAQ,CAAC;EACvC;EACA,IAAID,QAAQ,KAAK,CAAC,CAAC,EAAE;IACnB;IACA,OAAOE,IAAI,GAAG,CAAC;EACjB;EACA,OAAO,CAAC;AACV,CAAC;AACDb,OAAO,CAACI,YAAY,GAAGA,YAAY;AACnC,MAAMC,6BAA6B,GAAGK,YAAY,KAAK;EACrDG,IAAI,EAAE,CAAC;EACPD,QAAQ,EAAEF,YAAY,GAAG,CAAC,GAAG;AAC/B,CAAC,CAAC;AACFV,OAAO,CAACK,6BAA6B,GAAGA,6BAA6B;AACrE,MAAMF,YAAY,GAAGA,CAACU,IAAI,EAAEG,SAAS,GAAG,CAAC,KAAK;EAC5C,IAAIA,SAAS,KAAK,CAAC,EAAE;IACnB,OAAOH,IAAI;EACb;EACA,OAAOC,IAAI,CAACG,GAAG,CAACH,IAAI,CAACI,GAAG,CAACL,IAAI,EAAEG,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACnD,CAAC;AACDhB,OAAO,CAACG,YAAY,GAAGA,YAAY;AACnC,MAAMD,8BAA8B,GAAGA,CAACU,QAAQ,EAAEO,aAAa,KAAK;EAClE,IAAIA,aAAa,KAAKZ,UAAU,CAACa,aAAa,CAACC,QAAQ,IAAIT,QAAQ,GAAGH,aAAa,EAAE;IACnF,MAAM,IAAIa,KAAK,CAAC,CAAC,yEAAyE,EAAE,yFAAyF,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACpM;AACF,CAAC;AACDvB,OAAO,CAACE,8BAA8B,GAAGA,8BAA8B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}