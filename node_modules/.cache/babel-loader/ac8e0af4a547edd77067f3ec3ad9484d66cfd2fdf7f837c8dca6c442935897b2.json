{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gridTopLevelRowCountSelector = exports.gridRowsStateSelector = exports.gridRowsLookupSelector = exports.gridRowsLoadingSelector = exports.gridRowTreeSelector = exports.gridRowTreeDepthsSelector = exports.gridRowSelector = exports.gridRowNodeSelector = exports.gridRowMaximumTreeDepthSelector = exports.gridRowGroupsToFetchSelector = exports.gridRowGroupingNameSelector = exports.gridRowCountSelector = exports.gridPinnedRowsSelector = exports.gridPinnedRowsCountSelector = exports.gridDataRowsSelector = exports.gridDataRowIdsSelector = exports.gridAdditionalRowGroupsSelector = void 0;\nvar _createSelector = require(\"../../../utils/createSelector\");\nconst gridRowsStateSelector = exports.gridRowsStateSelector = (0, _createSelector.createRootSelector)(state => state.rows);\nconst gridRowCountSelector = exports.gridRowCountSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.totalRowCount);\nconst gridRowsLoadingSelector = exports.gridRowsLoadingSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.loading);\nconst gridTopLevelRowCountSelector = exports.gridTopLevelRowCountSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nconst gridRowsLookupSelector = exports.gridRowsLookupSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nconst gridRowSelector = exports.gridRowSelector = (0, _createSelector.createSelector)(gridRowsLookupSelector, (rows, id) => rows[id]);\nconst gridRowTreeSelector = exports.gridRowTreeSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.tree);\nconst gridRowNodeSelector = exports.gridRowNodeSelector = (0, _createSelector.createSelector)(gridRowTreeSelector, (rowTree, rowId) => rowTree[rowId]);\nconst gridRowGroupsToFetchSelector = exports.gridRowGroupsToFetchSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.groupsToFetch);\nconst gridRowGroupingNameSelector = exports.gridRowGroupingNameSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.groupingName);\nconst gridRowTreeDepthsSelector = exports.gridRowTreeDepthsSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.treeDepths);\nconst gridRowMaximumTreeDepthSelector = exports.gridRowMaximumTreeDepthSelector = (0, _createSelector.createSelectorMemoized)(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return (entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] ?? 0) + 1;\n});\nconst gridDataRowIdsSelector = exports.gridDataRowIdsSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.dataRowIds);\nconst gridDataRowsSelector = exports.gridDataRowsSelector = (0, _createSelector.createSelectorMemoized)(gridDataRowIdsSelector, gridRowsLookupSelector, (dataRowIds, rowsLookup) => dataRowIds.reduce((acc, id) => {\n  if (!rowsLookup[id]) {\n    return acc;\n  }\n  acc.push(rowsLookup[id]);\n  return acc;\n}, []));\n\n/**\n * @ignore - do not document.\n */\nconst gridAdditionalRowGroupsSelector = exports.gridAdditionalRowGroupsSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nconst gridPinnedRowsSelector = exports.gridPinnedRowsSelector = (0, _createSelector.createSelectorMemoized)(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nconst gridPinnedRowsCountSelector = exports.gridPinnedRowsCountSelector = (0, _createSelector.createSelector)(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","gridTopLevelRowCountSelector","gridRowsStateSelector","gridRowsLookupSelector","gridRowsLoadingSelector","gridRowTreeSelector","gridRowTreeDepthsSelector","gridRowSelector","gridRowNodeSelector","gridRowMaximumTreeDepthSelector","gridRowGroupsToFetchSelector","gridRowGroupingNameSelector","gridRowCountSelector","gridPinnedRowsSelector","gridPinnedRowsCountSelector","gridDataRowsSelector","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","_createSelector","require","createRootSelector","state","rows","createSelector","totalRowCount","loading","totalTopLevelRowCount","dataRowIdToModelLookup","id","tree","rowTree","rowId","groupsToFetch","groupingName","treeDepths","createSelectorMemoized","entries","length","filter","nodeCount","map","depth","Number","sort","a","b","dataRowIds","rowsLookup","reduce","acc","push","additionalRowGroups","rawPinnedRows","pinnedRows","bottom","rowEntry","model","top"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gridTopLevelRowCountSelector = exports.gridRowsStateSelector = exports.gridRowsLookupSelector = exports.gridRowsLoadingSelector = exports.gridRowTreeSelector = exports.gridRowTreeDepthsSelector = exports.gridRowSelector = exports.gridRowNodeSelector = exports.gridRowMaximumTreeDepthSelector = exports.gridRowGroupsToFetchSelector = exports.gridRowGroupingNameSelector = exports.gridRowCountSelector = exports.gridPinnedRowsSelector = exports.gridPinnedRowsCountSelector = exports.gridDataRowsSelector = exports.gridDataRowIdsSelector = exports.gridAdditionalRowGroupsSelector = void 0;\nvar _createSelector = require(\"../../../utils/createSelector\");\nconst gridRowsStateSelector = exports.gridRowsStateSelector = (0, _createSelector.createRootSelector)(state => state.rows);\nconst gridRowCountSelector = exports.gridRowCountSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.totalRowCount);\nconst gridRowsLoadingSelector = exports.gridRowsLoadingSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.loading);\nconst gridTopLevelRowCountSelector = exports.gridTopLevelRowCountSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nconst gridRowsLookupSelector = exports.gridRowsLookupSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nconst gridRowSelector = exports.gridRowSelector = (0, _createSelector.createSelector)(gridRowsLookupSelector, (rows, id) => rows[id]);\nconst gridRowTreeSelector = exports.gridRowTreeSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.tree);\nconst gridRowNodeSelector = exports.gridRowNodeSelector = (0, _createSelector.createSelector)(gridRowTreeSelector, (rowTree, rowId) => rowTree[rowId]);\nconst gridRowGroupsToFetchSelector = exports.gridRowGroupsToFetchSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.groupsToFetch);\nconst gridRowGroupingNameSelector = exports.gridRowGroupingNameSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.groupingName);\nconst gridRowTreeDepthsSelector = exports.gridRowTreeDepthsSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.treeDepths);\nconst gridRowMaximumTreeDepthSelector = exports.gridRowMaximumTreeDepthSelector = (0, _createSelector.createSelectorMemoized)(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return (entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] ?? 0) + 1;\n});\nconst gridDataRowIdsSelector = exports.gridDataRowIdsSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows.dataRowIds);\nconst gridDataRowsSelector = exports.gridDataRowsSelector = (0, _createSelector.createSelectorMemoized)(gridDataRowIdsSelector, gridRowsLookupSelector, (dataRowIds, rowsLookup) => dataRowIds.reduce((acc, id) => {\n  if (!rowsLookup[id]) {\n    return acc;\n  }\n  acc.push(rowsLookup[id]);\n  return acc;\n}, []));\n\n/**\n * @ignore - do not document.\n */\nconst gridAdditionalRowGroupsSelector = exports.gridAdditionalRowGroupsSelector = (0, _createSelector.createSelector)(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nconst gridPinnedRowsSelector = exports.gridPinnedRowsSelector = (0, _createSelector.createSelectorMemoized)(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nconst gridPinnedRowsCountSelector = exports.gridPinnedRowsCountSelector = (0, _createSelector.createSelector)(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}