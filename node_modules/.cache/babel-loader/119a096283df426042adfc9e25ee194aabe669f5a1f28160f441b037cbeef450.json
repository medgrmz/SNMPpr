{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridLoggerFactory = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _utils = require(\"../../utils/utils\");\nvar _utils2 = require(\"../utils\");\nconst forceDebug = (0, _utils.localStorageAvailable)() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nconst useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  (0, _utils2.useGridApiMethod)(apiRef, {\n    getLogger\n  }, 'private');\n};\nexports.useGridLoggerFactory = useGridLoggerFactory;","map":{"version":3,"names":["_interopRequireWildcard","require","default","Object","defineProperty","exports","value","useGridLoggerFactory","React","_utils","_utils2","forceDebug","localStorageAvailable","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","name","logLevel","appender","console","minLogLevelIdx","indexOf","Error","logger","reduce","loggerObj","method","idx","args","message","other","apiRef","props","getLogger","useCallback","toString","useGridApiMethod"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridLoggerFactory = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _utils = require(\"../../utils/utils\");\nvar _utils2 = require(\"../utils\");\nconst forceDebug = (0, _utils.localStorageAvailable)() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nconst useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  (0, _utils2.useGridApiMethod)(apiRef, {\n    getLogger\n  }, 'private');\n};\nexports.useGridLoggerFactory = useGridLoggerFactory;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAA+C,CAAC,CAACC,OAAO;AAC9FC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,IAAIC,KAAK,GAAGR,uBAAuB,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;AACrD,IAAIQ,MAAM,GAAGR,OAAO,CAAC,mBAAmB,CAAC;AACzC,IAAIS,OAAO,GAAGT,OAAO,CAAC,UAAU,CAAC;AACjC,MAAMU,UAAU,GAAG,CAAC,CAAC,EAAEF,MAAM,CAACG,qBAAqB,EAAE,CAAC,IAAIC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;AACtG,MAAMC,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;AACrB,MAAMC,UAAU,GAAG;EACjBC,KAAK,EAAEF,IAAI;EACXG,IAAI,EAAEH,IAAI;EACVI,IAAI,EAAEJ,IAAI;EACVK,KAAK,EAAEL;AACT,CAAC;AACD,MAAMM,UAAU,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;AACrD,SAASC,WAAWA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,GAAGC,OAAO,EAAE;EACvD,MAAMC,cAAc,GAAGN,UAAU,CAACO,OAAO,CAACJ,QAAQ,CAAC;EACnD,IAAIG,cAAc,KAAK,CAAC,CAAC,EAAE;IACzB,MAAM,IAAIE,KAAK,CAAC,oBAAoBL,QAAQ,kBAAkB,CAAC;EACjE;EACA,MAAMM,MAAM,GAAGT,UAAU,CAACU,MAAM,CAAC,CAACC,SAAS,EAAEC,MAAM,EAAEC,GAAG,KAAK;IAC3D,IAAIA,GAAG,IAAIP,cAAc,EAAE;MACzBK,SAAS,CAACC,MAAM,CAAC,GAAG,CAAC,GAAGE,IAAI,KAAK;QAC/B,MAAM,CAACC,OAAO,EAAE,GAAGC,KAAK,CAAC,GAAGF,IAAI;QAChCV,QAAQ,CAACQ,MAAM,CAAC,CAAC,UAAUV,IAAI,MAAMa,OAAO,EAAE,EAAE,GAAGC,KAAK,CAAC;MAC3D,CAAC;IACH,CAAC,MAAM;MACLL,SAAS,CAACC,MAAM,CAAC,GAAGlB,IAAI;IAC1B;IACA,OAAOiB,SAAS;EAClB,CAAC,EAAE,CAAC,CAAC,CAAC;EACN,OAAOF,MAAM;AACf;AACA,MAAMxB,oBAAoB,GAAGA,CAACgC,MAAM,EAAEC,KAAK,KAAK;EAC9C,MAAMC,SAAS,GAAGjC,KAAK,CAACkC,WAAW,CAAClB,IAAI,IAAI;IAC1C,IAAIb,UAAU,EAAE;MACd,OAAOY,WAAW,CAACC,IAAI,EAAE,OAAO,EAAEgB,KAAK,CAACT,MAAM,CAAC;IACjD;IACA,IAAI,CAACS,KAAK,CAACf,QAAQ,EAAE;MACnB,OAAOR,UAAU;IACnB;IACA,OAAOM,WAAW,CAACC,IAAI,EAAEgB,KAAK,CAACf,QAAQ,CAACkB,QAAQ,CAAC,CAAC,EAAEH,KAAK,CAACT,MAAM,CAAC;EACnE,CAAC,EAAE,CAACS,KAAK,CAACf,QAAQ,EAAEe,KAAK,CAACT,MAAM,CAAC,CAAC;EAClC,CAAC,CAAC,EAAErB,OAAO,CAACkC,gBAAgB,EAAEL,MAAM,EAAE;IACpCE;EACF,CAAC,EAAE,SAAS,CAAC;AACf,CAAC;AACDpC,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}