{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gridRowSelectionStateSelector = exports.gridRowSelectionManagerSelector = exports.gridRowSelectionIdsSelector = exports.gridRowSelectionCountSelector = void 0;\nvar _createSelector = require(\"../../../utils/createSelector\");\nvar _gridRowsSelector = require(\"../rows/gridRowsSelector\");\nvar _gridFilterSelector = require(\"../filter/gridFilterSelector\");\nvar _gridRowSelectionManager = require(\"../../../models/gridRowSelectionManager\");\nconst gridRowSelectionStateSelector = exports.gridRowSelectionStateSelector = (0, _createSelector.createRootSelector)(state => state.rowSelection);\nconst gridRowSelectionManagerSelector = exports.gridRowSelectionManagerSelector = (0, _createSelector.createSelectorMemoized)(gridRowSelectionStateSelector, _gridRowSelectionManager.createRowSelectionManager);\nconst gridRowSelectionCountSelector = exports.gridRowSelectionCountSelector = (0, _createSelector.createSelector)(gridRowSelectionStateSelector, _gridFilterSelector.gridFilteredRowCountSelector, (selection, filteredRowCount) => {\n  if (selection.type === 'include') {\n    return selection.ids.size;\n  }\n  // In exclude selection, all rows are selectable.\n  return filteredRowCount - selection.ids.size;\n});\nconst gridRowSelectionIdsSelector = exports.gridRowSelectionIdsSelector = (0, _createSelector.createSelectorMemoized)(gridRowSelectionStateSelector, _gridRowsSelector.gridRowsLookupSelector, _gridRowsSelector.gridDataRowIdsSelector, (selectionModel, rowsLookup, rowIds) => {\n  const map = new Map();\n  if (selectionModel.type === 'include') {\n    for (const id of selectionModel.ids) {\n      map.set(id, rowsLookup[id]);\n    }\n  } else {\n    for (let i = 0; i < rowIds.length; i += 1) {\n      const id = rowIds[i];\n      if (!selectionModel.ids.has(id)) {\n        map.set(id, rowsLookup[id]);\n      }\n    }\n  }\n  return map;\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","gridRowSelectionStateSelector","gridRowSelectionManagerSelector","gridRowSelectionIdsSelector","gridRowSelectionCountSelector","_createSelector","require","_gridRowsSelector","_gridFilterSelector","_gridRowSelectionManager","createRootSelector","state","rowSelection","createSelectorMemoized","createRowSelectionManager","createSelector","gridFilteredRowCountSelector","selection","filteredRowCount","type","ids","size","gridRowsLookupSelector","gridDataRowIdsSelector","selectionModel","rowsLookup","rowIds","map","Map","id","set","i","length","has"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gridRowSelectionStateSelector = exports.gridRowSelectionManagerSelector = exports.gridRowSelectionIdsSelector = exports.gridRowSelectionCountSelector = void 0;\nvar _createSelector = require(\"../../../utils/createSelector\");\nvar _gridRowsSelector = require(\"../rows/gridRowsSelector\");\nvar _gridFilterSelector = require(\"../filter/gridFilterSelector\");\nvar _gridRowSelectionManager = require(\"../../../models/gridRowSelectionManager\");\nconst gridRowSelectionStateSelector = exports.gridRowSelectionStateSelector = (0, _createSelector.createRootSelector)(state => state.rowSelection);\nconst gridRowSelectionManagerSelector = exports.gridRowSelectionManagerSelector = (0, _createSelector.createSelectorMemoized)(gridRowSelectionStateSelector, _gridRowSelectionManager.createRowSelectionManager);\nconst gridRowSelectionCountSelector = exports.gridRowSelectionCountSelector = (0, _createSelector.createSelector)(gridRowSelectionStateSelector, _gridFilterSelector.gridFilteredRowCountSelector, (selection, filteredRowCount) => {\n  if (selection.type === 'include') {\n    return selection.ids.size;\n  }\n  // In exclude selection, all rows are selectable.\n  return filteredRowCount - selection.ids.size;\n});\nconst gridRowSelectionIdsSelector = exports.gridRowSelectionIdsSelector = (0, _createSelector.createSelectorMemoized)(gridRowSelectionStateSelector, _gridRowsSelector.gridRowsLookupSelector, _gridRowsSelector.gridDataRowIdsSelector, (selectionModel, rowsLookup, rowIds) => {\n  const map = new Map();\n  if (selectionModel.type === 'include') {\n    for (const id of selectionModel.ids) {\n      map.set(id, rowsLookup[id]);\n    }\n  } else {\n    for (let i = 0; i < rowIds.length; i += 1) {\n      const id = rowIds[i];\n      if (!selectionModel.ids.has(id)) {\n        map.set(id, rowsLookup[id]);\n      }\n    }\n  }\n  return map;\n});"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,6BAA6B,GAAGF,OAAO,CAACG,+BAA+B,GAAGH,OAAO,CAACI,2BAA2B,GAAGJ,OAAO,CAACK,6BAA6B,GAAG,KAAK,CAAC;AACtK,IAAIC,eAAe,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AAC9D,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAC3D,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,8BAA8B,CAAC;AACjE,IAAIG,wBAAwB,GAAGH,OAAO,CAAC,yCAAyC,CAAC;AACjF,MAAML,6BAA6B,GAAGF,OAAO,CAACE,6BAA6B,GAAG,CAAC,CAAC,EAAEI,eAAe,CAACK,kBAAkB,EAAEC,KAAK,IAAIA,KAAK,CAACC,YAAY,CAAC;AAClJ,MAAMV,+BAA+B,GAAGH,OAAO,CAACG,+BAA+B,GAAG,CAAC,CAAC,EAAEG,eAAe,CAACQ,sBAAsB,EAAEZ,6BAA6B,EAAEQ,wBAAwB,CAACK,yBAAyB,CAAC;AAChN,MAAMV,6BAA6B,GAAGL,OAAO,CAACK,6BAA6B,GAAG,CAAC,CAAC,EAAEC,eAAe,CAACU,cAAc,EAAEd,6BAA6B,EAAEO,mBAAmB,CAACQ,4BAA4B,EAAE,CAACC,SAAS,EAAEC,gBAAgB,KAAK;EAClO,IAAID,SAAS,CAACE,IAAI,KAAK,SAAS,EAAE;IAChC,OAAOF,SAAS,CAACG,GAAG,CAACC,IAAI;EAC3B;EACA;EACA,OAAOH,gBAAgB,GAAGD,SAAS,CAACG,GAAG,CAACC,IAAI;AAC9C,CAAC,CAAC;AACF,MAAMlB,2BAA2B,GAAGJ,OAAO,CAACI,2BAA2B,GAAG,CAAC,CAAC,EAAEE,eAAe,CAACQ,sBAAsB,EAAEZ,6BAA6B,EAAEM,iBAAiB,CAACe,sBAAsB,EAAEf,iBAAiB,CAACgB,sBAAsB,EAAE,CAACC,cAAc,EAAEC,UAAU,EAAEC,MAAM,KAAK;EAC/Q,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC,CAAC;EACrB,IAAIJ,cAAc,CAACL,IAAI,KAAK,SAAS,EAAE;IACrC,KAAK,MAAMU,EAAE,IAAIL,cAAc,CAACJ,GAAG,EAAE;MACnCO,GAAG,CAACG,GAAG,CAACD,EAAE,EAAEJ,UAAU,CAACI,EAAE,CAAC,CAAC;IAC7B;EACF,CAAC,MAAM;IACL,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAACM,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACzC,MAAMF,EAAE,GAAGH,MAAM,CAACK,CAAC,CAAC;MACpB,IAAI,CAACP,cAAc,CAACJ,GAAG,CAACa,GAAG,CAACJ,EAAE,CAAC,EAAE;QAC/BF,GAAG,CAACG,GAAG,CAACD,EAAE,EAAEJ,UAAU,CAACI,EAAE,CAAC,CAAC;MAC7B;IACF;EACF;EACA,OAAOF,GAAG;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}