{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridRowSelectionPreProcessors = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _composeClasses = _interopRequireDefault(require(\"@mui/utils/composeClasses\"));\nvar _pipeProcessing = require(\"../../core/pipeProcessing\");\nvar _constants = require(\"../../../constants\");\nvar _colDef = require(\"../../../colDef\");\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return (0, _composeClasses.default)(slots, _constants.getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nconst useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = (0, _extends2.default)({}, _colDef.GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[_colDef.GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[_colDef.GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [_colDef.GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[_colDef.GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== _colDef.GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[_colDef.GRID_CHECKBOX_SELECTION_FIELD] = (0, _extends2.default)({}, selectionColumn, columnsState.lookup[_colDef.GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  (0, _pipeProcessing.useGridRegisterPipeProcessor)(apiRef, 'hydrateColumns', updateSelectionColumn);\n};\nexports.useGridRowSelectionPreProcessors = useGridRowSelectionPreProcessors;","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","useGridRowSelectionPreProcessors","_extends2","React","_composeClasses","_pipeProcessing","_constants","_colDef","useUtilityClasses","ownerState","classes","useMemo","slots","cellCheckbox","columnHeaderCheckbox","getDataGridUtilityClass","apiRef","props","updateSelectionColumn","useCallback","columnsState","selectionColumn","GRID_CHECKBOX_SELECTION_COL_DEF","cellClassName","headerClassName","headerName","current","getLocaleText","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","lookup","GRID_CHECKBOX_SELECTION_FIELD","orderedFields","filter","field","useGridRegisterPipeProcessor"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridRowSelectionPreProcessors = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _composeClasses = _interopRequireDefault(require(\"@mui/utils/composeClasses\"));\nvar _pipeProcessing = require(\"../../core/pipeProcessing\");\nvar _constants = require(\"../../../constants\");\nvar _colDef = require(\"../../../colDef\");\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return (0, _composeClasses.default)(slots, _constants.getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nconst useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = (0, _extends2.default)({}, _colDef.GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[_colDef.GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[_colDef.GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [_colDef.GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[_colDef.GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== _colDef.GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[_colDef.GRID_CHECKBOX_SELECTION_FIELD] = (0, _extends2.default)({}, selectionColumn, columnsState.lookup[_colDef.GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  (0, _pipeProcessing.useGridRegisterPipeProcessor)(apiRef, 'hydrateColumns', updateSelectionColumn);\n};\nexports.useGridRowSelectionPreProcessors = useGridRowSelectionPreProcessors;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}