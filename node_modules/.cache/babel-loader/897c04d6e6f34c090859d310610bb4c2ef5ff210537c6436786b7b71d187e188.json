{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dimensionsStateInitializer = void 0;\nexports.useGridDimensions = useGridDimensions;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"@mui/utils/useEnhancedEffect\"));\nvar _ownerDocument = _interopRequireDefault(require(\"@mui/utils/ownerDocument\"));\nvar _throttle = require(\"@mui/x-internals/throttle\");\nvar _isDeepEqual = require(\"@mui/x-internals/isDeepEqual\");\nvar _useGridEvent = require(\"../../utils/useGridEvent\");\nvar _useGridApiMethod = require(\"../../utils/useGridApiMethod\");\nvar _createSelector = require(\"../../../utils/createSelector\");\nvar _useGridLogger = require(\"../../utils/useGridLogger\");\nvar _columns = require(\"../columns\");\nvar _gridDimensionsSelectors = require(\"./gridDimensionsSelectors\");\nvar _density = require(\"../density\");\nvar _virtualization = require(\"../virtualization\");\nvar _utils = require(\"../../utils\");\nvar _useGridVisibleRows = require(\"../../utils/useGridVisibleRows\");\nvar _gridRowsMetaSelector = require(\"../rows/gridRowsMetaSelector\");\nvar _gridRowsUtils = require(\"../rows/gridRowsUtils\");\nvar _gridColumnsUtils = require(\"../columns/gridColumnsUtils\");\nvar _dataGridPropsDefaultValues = require(\"../../../constants/dataGridPropsDefaultValues\");\nvar _roundToDecimalPlaces = require(\"../../../utils/roundToDecimalPlaces\");\nvar _isJSDOM = require(\"../../../utils/isJSDOM\");\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nconst dimensionsStateInitializer = (state, props, apiRef) => {\n  const dimensions = EMPTY_DIMENSIONS;\n  const density = (0, _density.gridDensityFactorSelector)(apiRef);\n  return (0, _extends2.default)({}, state, {\n    dimensions: (0, _extends2.default)({}, dimensions, getStaticDimensions(props, apiRef, density, (0, _columns.gridVisiblePinnedColumnDefinitionsSelector)(apiRef)))\n  });\n};\nexports.dimensionsStateInitializer = dimensionsStateInitializer;\nconst columnsTotalWidthSelector = (0, _createSelector.createSelector)(_columns.gridVisibleColumnDefinitionsSelector, _columns.gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return (0, _roundToDecimalPlaces.roundToDecimalPlaces)(positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth, 1);\n});\nfunction useGridDimensions(apiRef, props) {\n  const logger = (0, _useGridLogger.useGridLogger)(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const pinnedColumns = (0, _utils.useGridSelector)(apiRef, _columns.gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = (0, _utils.useGridSelector)(apiRef, _density.gridDensityFactorSelector);\n  const columnsTotalWidth = (0, _utils.useGridSelector)(apiRef, columnsTotalWidthSelector);\n  const isFirstSizing = React.useRef(true);\n  const {\n    rowHeight,\n    headerHeight,\n    groupHeaderHeight,\n    headerFilterHeight,\n    headersTotalHeight,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = getStaticDimensions(props, apiRef, densityFactor, pinnedColumns);\n  const getRootDimensions = React.useCallback(() => (0, _gridDimensionsSelectors.gridDimensionsSelector)(apiRef), [apiRef]);\n  const setDimensions = React.useCallback(dimensions => {\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      dimensions\n    }));\n    if (apiRef.current.rootElementRef.current) {\n      setCSSVariables(apiRef.current.rootElementRef.current, (0, _gridDimensionsSelectors.gridDimensionsSelector)(apiRef));\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = (0, _gridDimensionsSelectors.gridDimensionsSelector)(apiRef);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = (0, _useGridVisibleRows.getVisibleRows)(apiRef);\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = (0, _virtualization.gridRenderContextSelector)(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    if (isFirstSizing.current) {\n      return;\n    }\n    // All the floating point dimensions should be rounded to .1 decimal places to avoid subpixel rendering issues\n    // https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\n    // https://github.com/mui/mui-x/issues/15721\n    const scrollbarSize = measureScrollbarSize(apiRef.current.mainElementRef.current, props.scrollbarSize);\n    const rowsMeta = (0, _gridRowsMetaSelector.gridRowsMetaSelector)(apiRef);\n    const topContainerHeight = headersTotalHeight + rowsMeta.pinnedTopRowsTotalHeight;\n    const bottomContainerHeight = rowsMeta.pinnedBottomRowsTotalHeight;\n    const contentSize = {\n      width: columnsTotalWidth,\n      height: (0, _roundToDecimalPlaces.roundToDecimalPlaces)(rowsMeta.currentPageTotalHeight, 1)\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    if ((0, _isDeepEqual.isDeepEqual)(prevDimensions, newDimensions)) {\n      return;\n    }\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const updateDimensionCallback = (0, _useEventCallback.default)(updateDimensions);\n  const debouncedUpdateDimensions = React.useMemo(() => props.resizeThrottleMs > 0 ? (0, _throttle.throttle)(() => {\n    updateDimensionCallback();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, props.resizeThrottleMs) : undefined, [apiRef, props.resizeThrottleMs, updateDimensionCallback]);\n  React.useEffect(() => debouncedUpdateDimensions?.clear, [debouncedUpdateDimensions]);\n  const apiPublic = {\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  (0, _useEnhancedEffect.default)(updateDimensions, [updateDimensions]);\n  (0, _useGridApiMethod.useGridApiMethod)(apiRef, apiPublic, 'public');\n  (0, _useGridApiMethod.useGridApiMethod)(apiRef, apiPrivate, 'private');\n  const handleRootMount = React.useCallback(root => {\n    setCSSVariables(root, (0, _gridDimensionsSelectors.gridDimensionsSelector)(apiRef));\n  }, [apiRef]);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !_isJSDOM.isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !_isJSDOM.isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current || !debouncedUpdateDimensions) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      isFirstSizing.current = false;\n      updateDimensions();\n      return;\n    }\n    debouncedUpdateDimensions();\n  }, [updateDimensions, props.autoHeight, debouncedUpdateDimensions, logger]);\n  (0, _useGridEvent.useGridEventPriority)(apiRef, 'rootMount', handleRootMount);\n  (0, _useGridEvent.useGridEventPriority)(apiRef, 'resize', handleResize);\n  (0, _useGridEvent.useGridEventPriority)(apiRef, 'debouncedResize', props.onResize);\n}\nfunction setCSSVariables(root, dimensions) {\n  const set = (k, v) => root.style.setProperty(k, v);\n  set('--DataGrid-hasScrollX', `${Number(dimensions.hasScrollX)}`);\n  set('--DataGrid-hasScrollY', `${Number(dimensions.hasScrollY)}`);\n  set('--DataGrid-scrollbarSize', `${dimensions.scrollbarSize}px`);\n  set('--DataGrid-rowWidth', `${dimensions.rowWidth}px`);\n  set('--DataGrid-columnsTotalWidth', `${dimensions.columnsTotalWidth}px`);\n  set('--DataGrid-leftPinnedWidth', `${dimensions.leftPinnedWidth}px`);\n  set('--DataGrid-rightPinnedWidth', `${dimensions.rightPinnedWidth}px`);\n  set('--DataGrid-headerHeight', `${dimensions.headerHeight}px`);\n  set('--DataGrid-headersTotalHeight', `${dimensions.headersTotalHeight}px`);\n  set('--DataGrid-topContainerHeight', `${dimensions.topContainerHeight}px`);\n  set('--DataGrid-bottomContainerHeight', `${dimensions.bottomContainerHeight}px`);\n  set('--height', `${dimensions.rowHeight}px`);\n}\nfunction getStaticDimensions(props, apiRef, density, pinnedColumnns) {\n  const validRowHeight = (0, _gridRowsUtils.getValidRowHeight)(props.rowHeight, _dataGridPropsDefaultValues.DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, _gridRowsUtils.rowHeightWarning);\n  return {\n    rowHeight: Math.floor(validRowHeight * density),\n    headerHeight: Math.floor(props.columnHeaderHeight * density),\n    groupHeaderHeight: Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * density),\n    headerFilterHeight: Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * density),\n    columnsTotalWidth: columnsTotalWidthSelector(apiRef),\n    headersTotalHeight: (0, _gridColumnsUtils.getTotalHeaderHeight)(apiRef, props),\n    leftPinnedWidth: pinnedColumnns.left.reduce((w, col) => w + col.computedWidth, 0),\n    rightPinnedWidth: pinnedColumnns.right.reduce((w, col) => w + col.computedWidth, 0)\n  };\n}\nconst scrollbarSizeCache = new WeakMap();\nfunction measureScrollbarSize(element, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (element === null) {\n    return 0;\n  }\n  const cachedSize = scrollbarSizeCache.get(element);\n  if (cachedSize !== undefined) {\n    return cachedSize;\n  }\n  const doc = (0, _ownerDocument.default)(element);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  element.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  element.removeChild(scrollDiv);\n  scrollbarSizeCache.set(element, size);\n  return size;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","dimensionsStateInitializer","useGridDimensions","_extends2","React","_useEventCallback","_useEnhancedEffect","_ownerDocument","_throttle","_isDeepEqual","_useGridEvent","_useGridApiMethod","_createSelector","_useGridLogger","_columns","_gridDimensionsSelectors","_density","_virtualization","_utils","_useGridVisibleRows","_gridRowsMetaSelector","_gridRowsUtils","_gridColumnsUtils","_dataGridPropsDefaultValues","_roundToDecimalPlaces","_isJSDOM","EMPTY_SIZE","width","height","EMPTY_DIMENSIONS","isReady","root","viewportOuterSize","viewportInnerSize","contentSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","headerHeight","groupHeaderHeight","headerFilterHeight","rowWidth","rowHeight","columnsTotalWidth","leftPinnedWidth","rightPinnedWidth","headersTotalHeight","topContainerHeight","bottomContainerHeight","state","props","apiRef","dimensions","density","gridDensityFactorSelector","getStaticDimensions","gridVisiblePinnedColumnDefinitionsSelector","columnsTotalWidthSelector","createSelector","gridVisibleColumnDefinitionsSelector","gridColumnPositionsSelector","visibleColumns","positions","colCount","length","roundToDecimalPlaces","computedWidth","logger","useGridLogger","errorShown","useRef","rootDimensionsRef","pinnedColumns","useGridSelector","densityFactor","isFirstSizing","getRootDimensions","useCallback","gridDimensionsSelector","setDimensions","current","setState","rootElementRef","setCSSVariables","getViewportPageSize","currentPage","getVisibleRows","getRowHeight","renderContext","gridRenderContextSelector","viewportPageSize","lastRowIndex","firstRowIndex","Math","min","rows","maximumPageSizeWithoutScrollBar","floor","updateDimensions","measureScrollbarSize","mainElementRef","rowsMeta","gridRowsMetaSelector","pinnedTopRowsTotalHeight","pinnedBottomRowsTotalHeight","currentPageTotalHeight","autoHeight","round","max","content","container","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","isDeepEqual","areElementSizesEqual","publishEvent","updateRenderContext","updateDimensionCallback","debouncedUpdateDimensions","useMemo","resizeThrottleMs","throttle","undefined","useEffect","clear","apiPublic","apiPrivate","useGridApiMethod","handleRootMount","handleResize","size","isJSDOM","error","join","useGridEventPriority","onResize","set","k","v","style","setProperty","Number","pinnedColumnns","validRowHeight","getValidRowHeight","DATA_GRID_PROPS_DEFAULT_VALUES","rowHeightWarning","columnHeaderHeight","columnGroupHeaderHeight","getTotalHeaderHeight","left","reduce","w","col","right","scrollbarSizeCache","WeakMap","element","cachedSize","get","doc","scrollDiv","createElement","position","overflow","className","appendChild","offsetWidth","clientWidth","removeChild","a","b"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dimensionsStateInitializer = void 0;\nexports.useGridDimensions = useGridDimensions;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _useEnhancedEffect = _interopRequireDefault(require(\"@mui/utils/useEnhancedEffect\"));\nvar _ownerDocument = _interopRequireDefault(require(\"@mui/utils/ownerDocument\"));\nvar _throttle = require(\"@mui/x-internals/throttle\");\nvar _isDeepEqual = require(\"@mui/x-internals/isDeepEqual\");\nvar _useGridEvent = require(\"../../utils/useGridEvent\");\nvar _useGridApiMethod = require(\"../../utils/useGridApiMethod\");\nvar _createSelector = require(\"../../../utils/createSelector\");\nvar _useGridLogger = require(\"../../utils/useGridLogger\");\nvar _columns = require(\"../columns\");\nvar _gridDimensionsSelectors = require(\"./gridDimensionsSelectors\");\nvar _density = require(\"../density\");\nvar _virtualization = require(\"../virtualization\");\nvar _utils = require(\"../../utils\");\nvar _useGridVisibleRows = require(\"../../utils/useGridVisibleRows\");\nvar _gridRowsMetaSelector = require(\"../rows/gridRowsMetaSelector\");\nvar _gridRowsUtils = require(\"../rows/gridRowsUtils\");\nvar _gridColumnsUtils = require(\"../columns/gridColumnsUtils\");\nvar _dataGridPropsDefaultValues = require(\"../../../constants/dataGridPropsDefaultValues\");\nvar _roundToDecimalPlaces = require(\"../../../utils/roundToDecimalPlaces\");\nvar _isJSDOM = require(\"../../../utils/isJSDOM\");\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nconst dimensionsStateInitializer = (state, props, apiRef) => {\n  const dimensions = EMPTY_DIMENSIONS;\n  const density = (0, _density.gridDensityFactorSelector)(apiRef);\n  return (0, _extends2.default)({}, state, {\n    dimensions: (0, _extends2.default)({}, dimensions, getStaticDimensions(props, apiRef, density, (0, _columns.gridVisiblePinnedColumnDefinitionsSelector)(apiRef)))\n  });\n};\nexports.dimensionsStateInitializer = dimensionsStateInitializer;\nconst columnsTotalWidthSelector = (0, _createSelector.createSelector)(_columns.gridVisibleColumnDefinitionsSelector, _columns.gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return (0, _roundToDecimalPlaces.roundToDecimalPlaces)(positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth, 1);\n});\nfunction useGridDimensions(apiRef, props) {\n  const logger = (0, _useGridLogger.useGridLogger)(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const pinnedColumns = (0, _utils.useGridSelector)(apiRef, _columns.gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = (0, _utils.useGridSelector)(apiRef, _density.gridDensityFactorSelector);\n  const columnsTotalWidth = (0, _utils.useGridSelector)(apiRef, columnsTotalWidthSelector);\n  const isFirstSizing = React.useRef(true);\n  const {\n    rowHeight,\n    headerHeight,\n    groupHeaderHeight,\n    headerFilterHeight,\n    headersTotalHeight,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = getStaticDimensions(props, apiRef, densityFactor, pinnedColumns);\n  const getRootDimensions = React.useCallback(() => (0, _gridDimensionsSelectors.gridDimensionsSelector)(apiRef), [apiRef]);\n  const setDimensions = React.useCallback(dimensions => {\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      dimensions\n    }));\n    if (apiRef.current.rootElementRef.current) {\n      setCSSVariables(apiRef.current.rootElementRef.current, (0, _gridDimensionsSelectors.gridDimensionsSelector)(apiRef));\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = (0, _gridDimensionsSelectors.gridDimensionsSelector)(apiRef);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = (0, _useGridVisibleRows.getVisibleRows)(apiRef);\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = (0, _virtualization.gridRenderContextSelector)(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    if (isFirstSizing.current) {\n      return;\n    }\n    // All the floating point dimensions should be rounded to .1 decimal places to avoid subpixel rendering issues\n    // https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\n    // https://github.com/mui/mui-x/issues/15721\n    const scrollbarSize = measureScrollbarSize(apiRef.current.mainElementRef.current, props.scrollbarSize);\n    const rowsMeta = (0, _gridRowsMetaSelector.gridRowsMetaSelector)(apiRef);\n    const topContainerHeight = headersTotalHeight + rowsMeta.pinnedTopRowsTotalHeight;\n    const bottomContainerHeight = rowsMeta.pinnedBottomRowsTotalHeight;\n    const contentSize = {\n      width: columnsTotalWidth,\n      height: (0, _roundToDecimalPlaces.roundToDecimalPlaces)(rowsMeta.currentPageTotalHeight, 1)\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    if ((0, _isDeepEqual.isDeepEqual)(prevDimensions, newDimensions)) {\n      return;\n    }\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const updateDimensionCallback = (0, _useEventCallback.default)(updateDimensions);\n  const debouncedUpdateDimensions = React.useMemo(() => props.resizeThrottleMs > 0 ? (0, _throttle.throttle)(() => {\n    updateDimensionCallback();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, props.resizeThrottleMs) : undefined, [apiRef, props.resizeThrottleMs, updateDimensionCallback]);\n  React.useEffect(() => debouncedUpdateDimensions?.clear, [debouncedUpdateDimensions]);\n  const apiPublic = {\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  (0, _useEnhancedEffect.default)(updateDimensions, [updateDimensions]);\n  (0, _useGridApiMethod.useGridApiMethod)(apiRef, apiPublic, 'public');\n  (0, _useGridApiMethod.useGridApiMethod)(apiRef, apiPrivate, 'private');\n  const handleRootMount = React.useCallback(root => {\n    setCSSVariables(root, (0, _gridDimensionsSelectors.gridDimensionsSelector)(apiRef));\n  }, [apiRef]);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !_isJSDOM.isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !_isJSDOM.isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current || !debouncedUpdateDimensions) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      isFirstSizing.current = false;\n      updateDimensions();\n      return;\n    }\n    debouncedUpdateDimensions();\n  }, [updateDimensions, props.autoHeight, debouncedUpdateDimensions, logger]);\n  (0, _useGridEvent.useGridEventPriority)(apiRef, 'rootMount', handleRootMount);\n  (0, _useGridEvent.useGridEventPriority)(apiRef, 'resize', handleResize);\n  (0, _useGridEvent.useGridEventPriority)(apiRef, 'debouncedResize', props.onResize);\n}\nfunction setCSSVariables(root, dimensions) {\n  const set = (k, v) => root.style.setProperty(k, v);\n  set('--DataGrid-hasScrollX', `${Number(dimensions.hasScrollX)}`);\n  set('--DataGrid-hasScrollY', `${Number(dimensions.hasScrollY)}`);\n  set('--DataGrid-scrollbarSize', `${dimensions.scrollbarSize}px`);\n  set('--DataGrid-rowWidth', `${dimensions.rowWidth}px`);\n  set('--DataGrid-columnsTotalWidth', `${dimensions.columnsTotalWidth}px`);\n  set('--DataGrid-leftPinnedWidth', `${dimensions.leftPinnedWidth}px`);\n  set('--DataGrid-rightPinnedWidth', `${dimensions.rightPinnedWidth}px`);\n  set('--DataGrid-headerHeight', `${dimensions.headerHeight}px`);\n  set('--DataGrid-headersTotalHeight', `${dimensions.headersTotalHeight}px`);\n  set('--DataGrid-topContainerHeight', `${dimensions.topContainerHeight}px`);\n  set('--DataGrid-bottomContainerHeight', `${dimensions.bottomContainerHeight}px`);\n  set('--height', `${dimensions.rowHeight}px`);\n}\nfunction getStaticDimensions(props, apiRef, density, pinnedColumnns) {\n  const validRowHeight = (0, _gridRowsUtils.getValidRowHeight)(props.rowHeight, _dataGridPropsDefaultValues.DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, _gridRowsUtils.rowHeightWarning);\n  return {\n    rowHeight: Math.floor(validRowHeight * density),\n    headerHeight: Math.floor(props.columnHeaderHeight * density),\n    groupHeaderHeight: Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * density),\n    headerFilterHeight: Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * density),\n    columnsTotalWidth: columnsTotalWidthSelector(apiRef),\n    headersTotalHeight: (0, _gridColumnsUtils.getTotalHeaderHeight)(apiRef, props),\n    leftPinnedWidth: pinnedColumnns.left.reduce((w, col) => w + col.computedWidth, 0),\n    rightPinnedWidth: pinnedColumnns.right.reduce((w, col) => w + col.computedWidth, 0)\n  };\n}\nconst scrollbarSizeCache = new WeakMap();\nfunction measureScrollbarSize(element, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (element === null) {\n    return 0;\n  }\n  const cachedSize = scrollbarSizeCache.get(element);\n  if (cachedSize !== undefined) {\n    return cachedSize;\n  }\n  const doc = (0, _ownerDocument.default)(element);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  element.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  element.removeChild(scrollDiv);\n  scrollbarSizeCache.set(element, size);\n  return size;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}