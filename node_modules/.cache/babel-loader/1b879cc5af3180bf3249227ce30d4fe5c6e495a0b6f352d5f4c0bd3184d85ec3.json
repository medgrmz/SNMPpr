{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderBooleanCell = exports.GridBooleanCell = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _composeClasses = _interopRequireDefault(require(\"@mui/utils/composeClasses\"));\nvar _useGridSelector = require(\"../../hooks/utils/useGridSelector\");\nvar _gridRowsSelector = require(\"../../hooks/features/rows/gridRowsSelector\");\nvar _gridClasses = require(\"../../constants/gridClasses\");\nvar _useGridRootProps = require(\"../../hooks/utils/useGridRootProps\");\nvar _useGridApiContext = require(\"../../hooks/utils/useGridApiContext\");\nvar _gridRowsUtils = require(\"../../hooks/features/rows/gridRowsUtils\");\nvar _constants = require(\"../../internals/constants\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return (0, _composeClasses.default)(slots, _gridClasses.getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  const apiRef = (0, _useGridApiContext.useGridApiContext)();\n  const rootProps = (0, _useGridRootProps.useGridRootProps)();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = (0, _useGridSelector.useGridSelector)(apiRef, _gridRowsSelector.gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(Icon, (0, _extends2.default)({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: _propTypes.default.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: _propTypes.default.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: _propTypes.default.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: _propTypes.default.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.shape({\n    current: _propTypes.default.shape({\n      focus: _propTypes.default.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: _propTypes.default.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: _propTypes.default.bool.isRequired,\n  hideDescendantCount: _propTypes.default.bool,\n  /**\n   * The grid row id.\n   */\n  id: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: _propTypes.default.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: _propTypes.default.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: _propTypes.default.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: _propTypes.default.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: _propTypes.default.any\n} : void 0;\nconst GridBooleanCell = exports.GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nconst renderBooleanCell = params => {\n  if (params.field !== _constants.GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD && (0, _gridRowsUtils.isAutogeneratedRowNode)(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(GridBooleanCell, (0, _extends2.default)({}, params));\n};\nexports.renderBooleanCell = renderBooleanCell;","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","renderBooleanCell","GridBooleanCell","_extends2","_objectWithoutPropertiesLoose2","React","_propTypes","_composeClasses","_useGridSelector","_gridRowsSelector","_gridClasses","_useGridRootProps","_useGridApiContext","_gridRowsUtils","_constants","_jsxRuntime","_excluded","useUtilityClasses","ownerState","classes","slots","root","getDataGridUtilityClass","GridBooleanCellRaw","props","rowNode","other","apiRef","useGridApiContext","rootProps","useGridRootProps","maxDepth","useGridSelector","gridRowMaximumTreeDepthSelector","isServerSideRowGroupingRow","type","treeData","Icon","useMemo","booleanCellTrueIcon","booleanCellFalseIcon","undefined","jsx","fontSize","className","titleAccess","current","getLocaleText","Boolean","process","env","NODE_ENV","propTypes","api","object","isRequired","cellMode","oneOf","colDef","field","string","focusElementRef","oneOfType","func","shape","focus","formattedValue","any","hasFocus","bool","hideDescendantCount","id","number","isEditable","row","tabIndex","memo","params","GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD","isAutogeneratedRowNode"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderBooleanCell = exports.GridBooleanCell = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _composeClasses = _interopRequireDefault(require(\"@mui/utils/composeClasses\"));\nvar _useGridSelector = require(\"../../hooks/utils/useGridSelector\");\nvar _gridRowsSelector = require(\"../../hooks/features/rows/gridRowsSelector\");\nvar _gridClasses = require(\"../../constants/gridClasses\");\nvar _useGridRootProps = require(\"../../hooks/utils/useGridRootProps\");\nvar _useGridApiContext = require(\"../../hooks/utils/useGridApiContext\");\nvar _gridRowsUtils = require(\"../../hooks/features/rows/gridRowsUtils\");\nvar _constants = require(\"../../internals/constants\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return (0, _composeClasses.default)(slots, _gridClasses.getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n  const apiRef = (0, _useGridApiContext.useGridApiContext)();\n  const rootProps = (0, _useGridRootProps.useGridRootProps)();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = (0, _useGridSelector.useGridSelector)(apiRef, _gridRowsSelector.gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(Icon, (0, _extends2.default)({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: _propTypes.default.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: _propTypes.default.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: _propTypes.default.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: _propTypes.default.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.shape({\n    current: _propTypes.default.shape({\n      focus: _propTypes.default.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: _propTypes.default.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: _propTypes.default.bool.isRequired,\n  hideDescendantCount: _propTypes.default.bool,\n  /**\n   * The grid row id.\n   */\n  id: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: _propTypes.default.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: _propTypes.default.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: _propTypes.default.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: _propTypes.default.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: _propTypes.default.any\n} : void 0;\nconst GridBooleanCell = exports.GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nconst renderBooleanCell = params => {\n  if (params.field !== _constants.GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD && (0, _gridRowsUtils.isAutogeneratedRowNode)(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/(0, _jsxRuntime.jsx)(GridBooleanCell, (0, _extends2.default)({}, params));\n};\nexports.renderBooleanCell = renderBooleanCell;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}