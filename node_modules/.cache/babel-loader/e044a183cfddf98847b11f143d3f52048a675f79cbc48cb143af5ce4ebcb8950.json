{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridColumnHeaders = exports.GridColumnHeaderRow = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _styles = require(\"@mui/material/styles\");\nvar _utils = require(\"../../utils\");\nvar _useGridRootProps = require(\"../../utils/useGridRootProps\");\nvar _useGridPrivateApiContext = require(\"../../utils/useGridPrivateApiContext\");\nvar _useGridEvent = require(\"../../utils/useGridEvent\");\nvar _GridColumnHeaderItem = require(\"../../../components/columnHeaders/GridColumnHeaderItem\");\nvar _gridDimensionsSelectors = require(\"../dimensions/gridDimensionsSelectors\");\nvar _virtualization = require(\"../virtualization\");\nvar _useGridVirtualScroller = require(\"../virtualization/useGridVirtualScroller\");\nvar _GridColumnGroupHeader = require(\"../../../components/columnHeaders/GridColumnGroupHeader\");\nvar _columns = require(\"../columns\");\nvar _gridColumnGroupsSelector = require(\"../columnGrouping/gridColumnGroupsSelector\");\nvar _GridScrollbarFillerCell = require(\"../../../components/GridScrollbarFillerCell\");\nvar _getPinnedCellOffset = require(\"../../../internals/utils/getPinnedCellOffset\");\nvar _GridColumnHeaderSeparator = require(\"../../../components/columnHeaders/GridColumnHeaderSeparator\");\nvar _gridClasses = require(\"../../../constants/gridClasses\");\nvar _cellBorderUtils = require(\"../../../utils/cellBorderUtils\");\nvar _constants = require(\"../../../internals/constants\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst GridColumnHeaderRow = exports.GridColumnHeaderRow = (0, _styles.styled)('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow'\n})({\n  display: 'flex'\n});\nconst useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = (0, _useGridPrivateApiContext.useGridPrivateApiContext)();\n  const rootProps = (0, _useGridRootProps.useGridRootProps)();\n  const columnGroupsModel = (0, _utils.useGridSelector)(apiRef, _gridColumnGroupsSelector.gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = (0, _utils.useGridSelector)(apiRef, _columns.gridColumnPositionsSelector);\n  const renderContext = (0, _utils.useGridSelector)(apiRef, _virtualization.gridRenderContextColumnsSelector);\n  const pinnedColumns = (0, _utils.useGridSelector)(apiRef, _columns.gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = (0, _utils.useGridSelector)(apiRef, _columns.gridColumnLookupSelector);\n  const offsetLeft = (0, _useGridVirtualScroller.computeOffsetLeft)(columnPositions, renderContext, pinnedColumns.left.length);\n  const columnsTotalWidth = (0, _utils.useGridSelector)(apiRef, _gridDimensionsSelectors.gridColumnsTotalWidthSelector);\n  const gridHasFiller = (0, _utils.useGridSelector)(apiRef, _gridDimensionsSelectors.gridHasFillerSelector);\n  const headerHeight = (0, _utils.useGridSelector)(apiRef, _gridDimensionsSelectors.gridHeaderHeightSelector);\n  const groupHeaderHeight = (0, _utils.useGridSelector)(apiRef, _gridDimensionsSelectors.gridGroupHeaderHeightSelector);\n  const scrollbarWidth = (0, _utils.useGridSelector)(apiRef, _gridDimensionsSelectors.gridVerticalScrollbarWidthSelector);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === _constants.PinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n        role: \"presentation\",\n        className: (0, _clsx.default)(_gridClasses.gridClasses.filler, borderBottom && _gridClasses.gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/(0, _jsxRuntime.jsx)(_GridScrollbarFillerCell.GridScrollbarFillerCell, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const pinnedOffset = (0, _getPinnedCellOffset.getPinnedCellOffset)(pinnedPosition, colDef.computedWidth, columnIndex, columnPositions, columnsTotalWidth, scrollbarWidth);\n      const siblingWithBorderingSeparator = pinnedPosition === _constants.PinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      const indexInSection = i;\n      const sectionLength = renderedColumns.length;\n      const showLeftBorder = (0, _cellBorderUtils.shouldCellShowLeftBorder)(pinnedPosition, indexInSection);\n      const showRightBorder = (0, _cellBorderUtils.shouldCellShowRightBorder)(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n      columns.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_GridColumnHeaderItem.GridColumnHeaderItem, (0, _extends2.default)({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        pinnedOffset: pinnedOffset,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused,\n        showLeftBorder: showLeftBorder,\n        showRightBorder: showRightBorder\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: _gridClasses.gridClasses['row--borderBottom'],\n      style: {\n        height: headerHeight\n      },\n      children: [leftRenderContext && getColumnHeaders({\n        position: _constants.PinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext\n      }), rightRenderContext && getColumnHeaders({\n        position: _constants.PinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext\n      }, {\n        disableReorder: true,\n        separatorSide: _GridColumnHeaderSeparator.GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return (0, _extends2.default)({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const pinnedOffset = (0, _getPinnedCellOffset.getPinnedCellOffset)(pinnedPosition, headerInfo.width, columnIndex, columnPositions, columnsTotalWidth, scrollbarWidth);\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === _constants.PinnedColumnPosition.LEFT) {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_GridColumnGroupHeader.GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: index === visibleColumnGroupHeader.length - 1,\n        maxDepth: headerGroupingMaxDepth,\n        height: groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        pinnedOffset: pinnedOffset,\n        showLeftBorder: (0, _cellBorderUtils.shouldCellShowLeftBorder)(pinnedPosition, indexInSection),\n        showRightBorder: (0, _cellBorderUtils.shouldCellShowRightBorder)(pinnedPosition, indexInSection, visibleColumnGroupHeader.length, rootProps.showColumnVerticalBorder, gridHasFiller)\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/(0, _jsxRuntime.jsxs)(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        style: {\n          height: groupHeaderHeight\n        },\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: _constants.PinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: _constants.PinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    columnPositions,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    getPinnedCellOffset: _getPinnedCellOffset.getPinnedCellOffset,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};\nexports.useGridColumnHeaders = useGridColumnHeaders;","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","useGridColumnHeaders","GridColumnHeaderRow","_extends2","React","_clsx","_styles","_utils","_useGridRootProps","_useGridPrivateApiContext","_useGridEvent","_GridColumnHeaderItem","_gridDimensionsSelectors","_virtualization","_useGridVirtualScroller","_GridColumnGroupHeader","_columns","_gridColumnGroupsSelector","_GridScrollbarFillerCell","_getPinnedCellOffset","_GridColumnHeaderSeparator","_gridClasses","_cellBorderUtils","_constants","_jsxRuntime","styled","name","slot","display","props","visibleColumns","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","dragCol","setDragCol","useState","resizeCol","setResizeCol","apiRef","useGridPrivateApiContext","rootProps","useGridRootProps","columnGroupsModel","useGridSelector","gridColumnGroupsUnwrappedModelSelector","columnPositions","gridColumnPositionsSelector","renderContext","gridRenderContextColumnsSelector","pinnedColumns","gridVisiblePinnedColumnDefinitionsSelector","columnsLookup","gridColumnLookupSelector","offsetLeft","computeOffsetLeft","left","length","columnsTotalWidth","gridColumnsTotalWidthSelector","gridHasFiller","gridHasFillerSelector","headerHeight","gridHeaderHeightSelector","groupHeaderHeight","gridGroupHeaderHeightSelector","scrollbarWidth","gridVerticalScrollbarWidthSelector","handleColumnResizeStart","useCallback","params","field","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","useMemo","firstColumnIndex","lastColumnIndex","rightRenderContext","right","useGridEvent","getColumnsToRender","currentContext","firstColumnToRender","lastColumnToRender","renderedColumns","slice","getFillers","children","leftOverflow","borderBottom","isPinnedRight","position","PinnedColumnPosition","RIGHT","isNotPinned","undefined","hasScrollbarFiller","leftOffsetWidth","jsxs","Fragment","jsx","role","style","width","className","gridClasses","filler","GridScrollbarFillerCell","header","pinnedRight","borderTop","getColumnHeaders","other","columns","i","colDef","columnIndex","isFirstColumn","tabIndex","hasFocus","open","pinnedPosition","pinnedOffset","getPinnedCellOffset","computedWidth","siblingWithBorderingSeparator","isSiblingFocused","isLastUnpinned","indexInSection","sectionLength","showLeftBorder","shouldCellShowLeftBorder","showRightBorder","shouldCellShowRightBorder","showColumnVerticalBorder","push","GridColumnHeaderItem","columnMenuOpen","filterItemsCounter","isDragging","colIndex","isResizing","isLast","getColumnHeadersRow","ownerState","height","LEFT","disableReorder","separatorSide","GridColumnHeaderSeparatorSides","Left","getColumnGroupHeaders","depth","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","findIndex","groupId","columnFields","includes","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","map","groupStructure","filter","firstVisibleColumnIndex","indexOf","hiddenGroupColumns","reduce","acc","column","index","headerInfo","fields","GridColumnGroupHeader","isLastColumn","maxDepth","getColumnGroupHeadersRows","headerRows","maxLastColumn","getInnerProps"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridColumnHeaders = exports.GridColumnHeaderRow = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _styles = require(\"@mui/material/styles\");\nvar _utils = require(\"../../utils\");\nvar _useGridRootProps = require(\"../../utils/useGridRootProps\");\nvar _useGridPrivateApiContext = require(\"../../utils/useGridPrivateApiContext\");\nvar _useGridEvent = require(\"../../utils/useGridEvent\");\nvar _GridColumnHeaderItem = require(\"../../../components/columnHeaders/GridColumnHeaderItem\");\nvar _gridDimensionsSelectors = require(\"../dimensions/gridDimensionsSelectors\");\nvar _virtualization = require(\"../virtualization\");\nvar _useGridVirtualScroller = require(\"../virtualization/useGridVirtualScroller\");\nvar _GridColumnGroupHeader = require(\"../../../components/columnHeaders/GridColumnGroupHeader\");\nvar _columns = require(\"../columns\");\nvar _gridColumnGroupsSelector = require(\"../columnGrouping/gridColumnGroupsSelector\");\nvar _GridScrollbarFillerCell = require(\"../../../components/GridScrollbarFillerCell\");\nvar _getPinnedCellOffset = require(\"../../../internals/utils/getPinnedCellOffset\");\nvar _GridColumnHeaderSeparator = require(\"../../../components/columnHeaders/GridColumnHeaderSeparator\");\nvar _gridClasses = require(\"../../../constants/gridClasses\");\nvar _cellBorderUtils = require(\"../../../utils/cellBorderUtils\");\nvar _constants = require(\"../../../internals/constants\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nconst GridColumnHeaderRow = exports.GridColumnHeaderRow = (0, _styles.styled)('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow'\n})({\n  display: 'flex'\n});\nconst useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = (0, _useGridPrivateApiContext.useGridPrivateApiContext)();\n  const rootProps = (0, _useGridRootProps.useGridRootProps)();\n  const columnGroupsModel = (0, _utils.useGridSelector)(apiRef, _gridColumnGroupsSelector.gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = (0, _utils.useGridSelector)(apiRef, _columns.gridColumnPositionsSelector);\n  const renderContext = (0, _utils.useGridSelector)(apiRef, _virtualization.gridRenderContextColumnsSelector);\n  const pinnedColumns = (0, _utils.useGridSelector)(apiRef, _columns.gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = (0, _utils.useGridSelector)(apiRef, _columns.gridColumnLookupSelector);\n  const offsetLeft = (0, _useGridVirtualScroller.computeOffsetLeft)(columnPositions, renderContext, pinnedColumns.left.length);\n  const columnsTotalWidth = (0, _utils.useGridSelector)(apiRef, _gridDimensionsSelectors.gridColumnsTotalWidthSelector);\n  const gridHasFiller = (0, _utils.useGridSelector)(apiRef, _gridDimensionsSelectors.gridHasFillerSelector);\n  const headerHeight = (0, _utils.useGridSelector)(apiRef, _gridDimensionsSelectors.gridHeaderHeightSelector);\n  const groupHeaderHeight = (0, _utils.useGridSelector)(apiRef, _gridDimensionsSelectors.gridGroupHeaderHeightSelector);\n  const scrollbarWidth = (0, _utils.useGridSelector)(apiRef, _gridDimensionsSelectors.gridVerticalScrollbarWidthSelector);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === _constants.PinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/(0, _jsxRuntime.jsx)(\"div\", {\n        role: \"presentation\",\n        className: (0, _clsx.default)(_gridClasses.gridClasses.filler, borderBottom && _gridClasses.gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/(0, _jsxRuntime.jsx)(_GridScrollbarFillerCell.GridScrollbarFillerCell, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const pinnedOffset = (0, _getPinnedCellOffset.getPinnedCellOffset)(pinnedPosition, colDef.computedWidth, columnIndex, columnPositions, columnsTotalWidth, scrollbarWidth);\n      const siblingWithBorderingSeparator = pinnedPosition === _constants.PinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      const indexInSection = i;\n      const sectionLength = renderedColumns.length;\n      const showLeftBorder = (0, _cellBorderUtils.shouldCellShowLeftBorder)(pinnedPosition, indexInSection);\n      const showRightBorder = (0, _cellBorderUtils.shouldCellShowRightBorder)(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n      columns.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_GridColumnHeaderItem.GridColumnHeaderItem, (0, _extends2.default)({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        pinnedOffset: pinnedOffset,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused,\n        showLeftBorder: showLeftBorder,\n        showRightBorder: showRightBorder\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: _gridClasses.gridClasses['row--borderBottom'],\n      style: {\n        height: headerHeight\n      },\n      children: [leftRenderContext && getColumnHeaders({\n        position: _constants.PinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext\n      }), rightRenderContext && getColumnHeaders({\n        position: _constants.PinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext\n      }, {\n        disableReorder: true,\n        separatorSide: _GridColumnHeaderSeparator.GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return (0, _extends2.default)({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const pinnedOffset = (0, _getPinnedCellOffset.getPinnedCellOffset)(pinnedPosition, headerInfo.width, columnIndex, columnPositions, columnsTotalWidth, scrollbarWidth);\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === _constants.PinnedColumnPosition.LEFT) {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_GridColumnGroupHeader.GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: index === visibleColumnGroupHeader.length - 1,\n        maxDepth: headerGroupingMaxDepth,\n        height: groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        pinnedOffset: pinnedOffset,\n        showLeftBorder: (0, _cellBorderUtils.shouldCellShowLeftBorder)(pinnedPosition, indexInSection),\n        showRightBorder: (0, _cellBorderUtils.shouldCellShowRightBorder)(pinnedPosition, indexInSection, visibleColumnGroupHeader.length, rootProps.showColumnVerticalBorder, gridHasFiller)\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/(0, _jsxRuntime.jsxs)(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        style: {\n          height: groupHeaderHeight\n        },\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: _constants.PinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: _constants.PinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    columnPositions,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    getPinnedCellOffset: _getPinnedCellOffset.getPinnedCellOffset,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};\nexports.useGridColumnHeaders = useGridColumnHeaders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}