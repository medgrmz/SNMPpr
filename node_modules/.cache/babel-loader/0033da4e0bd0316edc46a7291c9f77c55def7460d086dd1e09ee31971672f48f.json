{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridFocus = exports.focusStateInitializer = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _ownerDocument = _interopRequireDefault(require(\"@mui/utils/ownerDocument\"));\nvar _gridClasses = require(\"../../../constants/gridClasses\");\nvar _useGridApiMethod = require(\"../../utils/useGridApiMethod\");\nvar _useGridLogger = require(\"../../utils/useGridLogger\");\nvar _useGridEvent = require(\"../../utils/useGridEvent\");\nvar _keyboardUtils = require(\"../../../utils/keyboardUtils\");\nvar _gridFocusStateSelector = require(\"./gridFocusStateSelector\");\nvar _gridColumnsSelector = require(\"../columns/gridColumnsSelector\");\nvar _useGridVisibleRows = require(\"../../utils/useGridVisibleRows\");\nvar _utils = require(\"../../../utils/utils\");\nvar _gridRowsSelector = require(\"../rows/gridRowsSelector\");\nconst focusStateInitializer = state => (0, _extends2.default)({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexports.focusStateInitializer = focusStateInitializer;\nconst useGridFocus = (apiRef, props) => {\n  const logger = (0, _useGridLogger.useGridLogger)(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return (0, _extends2.default)({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return (0, _extends2.default)({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return (0, _extends2.default)({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => (0, _gridFocusStateSelector.gridFocusColumnGroupHeaderSelector)(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = (0, _gridColumnsSelector.gridVisibleColumnDefinitionsSelector)(apiRef);\n    const currentPage = (0, _useGridVisibleRows.getVisibleRows)(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = (0, _gridRowsSelector.gridPinnedRowsSelector)(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = (0, _utils.clamp)(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = (0, _utils.clamp)(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || (0, _keyboardUtils.isNavigationKey)(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = (0, _gridFocusStateSelector.gridFocusColumnGroupHeaderSelector)(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(_gridClasses.gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = cell.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const rowEl = apiRef.current.getRowElement(lastFocusedRowId);\n        const lastFocusedRowIndex = rowEl?.dataset.rowindex ? Number(rowEl?.dataset.rowindex) : 0;\n        const currentPage = (0, _useGridVisibleRows.getVisibleRows)(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[(0, _utils.clamp)(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow?.id ?? null;\n      }\n      apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = (0, _useEventCallback.default)(() => {\n    const currentFocusedCell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = (0, _useGridVisibleRows.getVisibleRows)(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = (0, _gridColumnsSelector.gridVisibleColumnDefinitionsSelector)(apiRef);\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  (0, _useGridApiMethod.useGridApiMethod)(apiRef, focusApi, 'public');\n  (0, _useGridApiMethod.useGridApiMethod)(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = (0, _ownerDocument.default)(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnHeaderBlur', handleBlur);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'cellMouseDown', handleCellMouseDown);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'cellKeyDown', handleCellKeyDown);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'cellModeChange', handleCellModeChange);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'rowsSet', handleRowSet);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};\nexports.useGridFocus = useGridFocus;","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","useGridFocus","focusStateInitializer","_extends2","React","_useEventCallback","_ownerDocument","_gridClasses","_useGridApiMethod","_useGridLogger","_useGridEvent","_keyboardUtils","_gridFocusStateSelector","_gridColumnsSelector","_useGridVisibleRows","_utils","_gridRowsSelector","state","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","apiRef","props","logger","useGridLogger","lastClickedCell","useRef","hasRootReference","current","rootElementRef","publishCellFocusOut","useCallback","event","getRow","id","publishEvent","getCellParams","field","setCellFocus","focusedCell","gridFocusCellSelector","setState","debug","setColumnHeaderFocus","setColumnHeaderFilterFocus","setColumnGroupHeaderFocus","depth","getColumnGroupHeaderFocus","gridFocusColumnGroupHeaderSelector","moveFocusToRelativeCell","direction","columnIndexToFocus","getColumnIndex","visibleColumns","gridVisibleColumnDefinitionsSelector","currentPage","getVisibleRows","pagination","paginationMode","pinnedRows","gridPinnedRowsSelector","currentPageRows","concat","top","rows","bottom","rowIndexToFocus","findIndex","row","length","clamp","rowToFocus","colSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","rightVisibleCellIndex","columnToFocus","handleCellDoubleClick","handleCellKeyDown","params","key","isNavigationKey","handleColumnHeaderFocus","target","currentTarget","handleColumnGroupHeaderFocus","fields","focusedColumnGroup","includes","handleBlur","_","relatedTarget","getAttribute","gridClasses","handleCellMouseDown","handleDocumentClick","cellParams","canUpdateFocus","unstable_applyPipeProcessors","cellElement","getCellElement","contains","handleCellModeChange","cellMode","handleRowSet","lastFocusedRowId","nextRowId","rowEl","getRowElement","lastFocusedRowIndex","dataset","rowindex","Number","nextRow","handlePaginationModelChange","currentFocusedCell","rowIsInCurrentPage","find","focusApi","focusPrivateApi","useGridApiMethod","useEffect","doc","addEventListener","removeEventListener","useGridEvent"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useGridFocus = exports.focusStateInitializer = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEventCallback = _interopRequireDefault(require(\"@mui/utils/useEventCallback\"));\nvar _ownerDocument = _interopRequireDefault(require(\"@mui/utils/ownerDocument\"));\nvar _gridClasses = require(\"../../../constants/gridClasses\");\nvar _useGridApiMethod = require(\"../../utils/useGridApiMethod\");\nvar _useGridLogger = require(\"../../utils/useGridLogger\");\nvar _useGridEvent = require(\"../../utils/useGridEvent\");\nvar _keyboardUtils = require(\"../../../utils/keyboardUtils\");\nvar _gridFocusStateSelector = require(\"./gridFocusStateSelector\");\nvar _gridColumnsSelector = require(\"../columns/gridColumnsSelector\");\nvar _useGridVisibleRows = require(\"../../utils/useGridVisibleRows\");\nvar _utils = require(\"../../../utils/utils\");\nvar _gridRowsSelector = require(\"../rows/gridRowsSelector\");\nconst focusStateInitializer = state => (0, _extends2.default)({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexports.focusStateInitializer = focusStateInitializer;\nconst useGridFocus = (apiRef, props) => {\n  const logger = (0, _useGridLogger.useGridLogger)(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return (0, _extends2.default)({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return (0, _extends2.default)({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return (0, _extends2.default)({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => (0, _gridFocusStateSelector.gridFocusColumnGroupHeaderSelector)(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = (0, _gridColumnsSelector.gridVisibleColumnDefinitionsSelector)(apiRef);\n    const currentPage = (0, _useGridVisibleRows.getVisibleRows)(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = (0, _gridRowsSelector.gridPinnedRowsSelector)(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = (0, _utils.clamp)(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = (0, _utils.clamp)(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || (0, _keyboardUtils.isNavigationKey)(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = (0, _gridFocusStateSelector.gridFocusColumnGroupHeaderSelector)(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(_gridClasses.gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = cell.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const rowEl = apiRef.current.getRowElement(lastFocusedRowId);\n        const lastFocusedRowIndex = rowEl?.dataset.rowindex ? Number(rowEl?.dataset.rowindex) : 0;\n        const currentPage = (0, _useGridVisibleRows.getVisibleRows)(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[(0, _utils.clamp)(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow?.id ?? null;\n      }\n      apiRef.current.setState(state => (0, _extends2.default)({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = (0, _useEventCallback.default)(() => {\n    const currentFocusedCell = (0, _gridFocusStateSelector.gridFocusCellSelector)(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = (0, _useGridVisibleRows.getVisibleRows)(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = (0, _gridColumnsSelector.gridVisibleColumnDefinitionsSelector)(apiRef);\n    apiRef.current.setState(state => {\n      return (0, _extends2.default)({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  (0, _useGridApiMethod.useGridApiMethod)(apiRef, focusApi, 'public');\n  (0, _useGridApiMethod.useGridApiMethod)(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = (0, _ownerDocument.default)(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnHeaderBlur', handleBlur);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'cellMouseDown', handleCellMouseDown);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'cellKeyDown', handleCellKeyDown);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'cellModeChange', handleCellModeChange);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'rowsSet', handleRowSet);\n  (0, _useGridEvent.useGridEvent)(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};\nexports.useGridFocus = useGridFocus;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}