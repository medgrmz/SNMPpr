{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gridVirtualizationSelector = exports.gridVirtualizationRowEnabledSelector = exports.gridVirtualizationEnabledSelector = exports.gridVirtualizationColumnEnabledSelector = exports.gridRenderContextSelector = exports.gridRenderContextColumnsSelector = void 0;\nvar _createSelector = require(\"../../../utils/createSelector\");\n/**\n * Get the columns state\n * @category Virtualization\n */\nconst gridVirtualizationSelector = exports.gridVirtualizationSelector = (0, _createSelector.createRootSelector)(state => state.virtualization);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nconst gridVirtualizationEnabledSelector = exports.gridVirtualizationEnabledSelector = (0, _createSelector.createSelector)(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nconst gridVirtualizationColumnEnabledSelector = exports.gridVirtualizationColumnEnabledSelector = (0, _createSelector.createSelector)(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nconst gridVirtualizationRowEnabledSelector = exports.gridVirtualizationRowEnabledSelector = (0, _createSelector.createSelector)(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nconst gridRenderContextSelector = exports.gridRenderContextSelector = (0, _createSelector.createSelector)(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nconst gridRenderContextColumnsSelector = exports.gridRenderContextColumnsSelector = (0, _createSelector.createSelectorMemoized)(apiRef => apiRef.current.state.virtualization.renderContext.firstColumnIndex, apiRef => apiRef.current.state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","map":{"version":3,"names":["Object","defineProperty","exports","value","gridVirtualizationSelector","gridVirtualizationRowEnabledSelector","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","gridRenderContextSelector","gridRenderContextColumnsSelector","_createSelector","require","createRootSelector","state","virtualization","createSelector","enabled","enabledForColumns","enabledForRows","renderContext","createSelectorMemoized","apiRef","current","firstColumnIndex","lastColumnIndex"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gridVirtualizationSelector = exports.gridVirtualizationRowEnabledSelector = exports.gridVirtualizationEnabledSelector = exports.gridVirtualizationColumnEnabledSelector = exports.gridRenderContextSelector = exports.gridRenderContextColumnsSelector = void 0;\nvar _createSelector = require(\"../../../utils/createSelector\");\n/**\n * Get the columns state\n * @category Virtualization\n */\nconst gridVirtualizationSelector = exports.gridVirtualizationSelector = (0, _createSelector.createRootSelector)(state => state.virtualization);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nconst gridVirtualizationEnabledSelector = exports.gridVirtualizationEnabledSelector = (0, _createSelector.createSelector)(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nconst gridVirtualizationColumnEnabledSelector = exports.gridVirtualizationColumnEnabledSelector = (0, _createSelector.createSelector)(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nconst gridVirtualizationRowEnabledSelector = exports.gridVirtualizationRowEnabledSelector = (0, _createSelector.createSelector)(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nconst gridRenderContextSelector = exports.gridRenderContextSelector = (0, _createSelector.createSelector)(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nconst gridRenderContextColumnsSelector = exports.gridRenderContextColumnsSelector = (0, _createSelector.createSelectorMemoized)(apiRef => apiRef.current.state.virtualization.renderContext.firstColumnIndex, apiRef => apiRef.current.state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,0BAA0B,GAAGF,OAAO,CAACG,oCAAoC,GAAGH,OAAO,CAACI,iCAAiC,GAAGJ,OAAO,CAACK,uCAAuC,GAAGL,OAAO,CAACM,yBAAyB,GAAGN,OAAO,CAACO,gCAAgC,GAAG,KAAK,CAAC;AACvQ,IAAIC,eAAe,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AAC9D;AACA;AACA;AACA;AACA,MAAMP,0BAA0B,GAAGF,OAAO,CAACE,0BAA0B,GAAG,CAAC,CAAC,EAAEM,eAAe,CAACE,kBAAkB,EAAEC,KAAK,IAAIA,KAAK,CAACC,cAAc,CAAC;;AAE9I;AACA;AACA;AACA;AACA;AACA,MAAMR,iCAAiC,GAAGJ,OAAO,CAACI,iCAAiC,GAAG,CAAC,CAAC,EAAEI,eAAe,CAACK,cAAc,EAAEX,0BAA0B,EAAES,KAAK,IAAIA,KAAK,CAACG,OAAO,CAAC;;AAE7K;AACA;AACA;AACA;AACA,MAAMT,uCAAuC,GAAGL,OAAO,CAACK,uCAAuC,GAAG,CAAC,CAAC,EAAEG,eAAe,CAACK,cAAc,EAAEX,0BAA0B,EAAES,KAAK,IAAIA,KAAK,CAACI,iBAAiB,CAAC;;AAEnM;AACA;AACA;AACA;AACA,MAAMZ,oCAAoC,GAAGH,OAAO,CAACG,oCAAoC,GAAG,CAAC,CAAC,EAAEK,eAAe,CAACK,cAAc,EAAEX,0BAA0B,EAAES,KAAK,IAAIA,KAAK,CAACK,cAAc,CAAC;;AAE1L;AACA;AACA;AACA;AACA;AACA,MAAMV,yBAAyB,GAAGN,OAAO,CAACM,yBAAyB,GAAG,CAAC,CAAC,EAAEE,eAAe,CAACK,cAAc,EAAEX,0BAA0B,EAAES,KAAK,IAAIA,KAAK,CAACM,aAAa,CAAC;;AAEnK;AACA;AACA;AACA;AACA;AACA;AACA,MAAMV,gCAAgC,GAAGP,OAAO,CAACO,gCAAgC,GAAG,CAAC,CAAC,EAAEC,eAAe,CAACU,sBAAsB,EAAEC,MAAM,IAAIA,MAAM,CAACC,OAAO,CAACT,KAAK,CAACC,cAAc,CAACK,aAAa,CAACI,gBAAgB,EAAEF,MAAM,IAAIA,MAAM,CAACC,OAAO,CAACT,KAAK,CAACC,cAAc,CAACK,aAAa,CAACK,eAAe,EAAE,CAACD,gBAAgB,EAAEC,eAAe,MAAM;EACjUD,gBAAgB;EAChBC;AACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}