{"ast":null,"code":"/**\n * Loads all stylesheets from the given root element into the document.\n * @returns an array of promises that resolve when each stylesheet is loaded\n * @param document Document to load stylesheets into\n * @param root Document or ShadowRoot to load stylesheets from\n */\nexport function loadStyleSheets(document, root) {\n  const stylesheetLoadPromises = [];\n  const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n  for (let i = 0; i < headStyleElements.length; i += 1) {\n    const node = headStyleElements[i];\n    if (node.tagName === 'STYLE') {\n      const newHeadStyleElements = document.createElement(node.tagName);\n      const sheet = node.sheet;\n      if (sheet) {\n        let styleCSS = '';\n        for (let j = 0; j < sheet.cssRules.length; j += 1) {\n          if (typeof sheet.cssRules[j].cssText === 'string') {\n            styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n          }\n        }\n        newHeadStyleElements.appendChild(document.createTextNode(styleCSS));\n        document.head.appendChild(newHeadStyleElements);\n      }\n    } else if (node.getAttribute('href')) {\n      // If `href` tag is empty, avoid loading these links\n\n      const newHeadStyleElements = document.createElement(node.tagName);\n      for (let j = 0; j < node.attributes.length; j += 1) {\n        const attr = node.attributes[j];\n        if (attr) {\n          newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n        }\n      }\n      stylesheetLoadPromises.push(new Promise(resolve => {\n        newHeadStyleElements.addEventListener('load', () => resolve());\n      }));\n      document.head.appendChild(newHeadStyleElements);\n    }\n  }\n  return stylesheetLoadPromises;\n}","map":{"version":3,"names":["loadStyleSheets","document","root","stylesheetLoadPromises","headStyleElements","querySelectorAll","i","length","node","tagName","newHeadStyleElements","createElement","sheet","styleCSS","j","cssRules","cssText","appendChild","createTextNode","head","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","push","Promise","resolve","addEventListener"],"sources":["C:/Users/MSI GF75 THIN 10SC/OneDrive/Bureau/fffffffff/node_modules/@mui/x-internals/esm/export/loadStyleSheets.js"],"sourcesContent":["/**\n * Loads all stylesheets from the given root element into the document.\n * @returns an array of promises that resolve when each stylesheet is loaded\n * @param document Document to load stylesheets into\n * @param root Document or ShadowRoot to load stylesheets from\n */\nexport function loadStyleSheets(document, root) {\n  const stylesheetLoadPromises = [];\n  const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n  for (let i = 0; i < headStyleElements.length; i += 1) {\n    const node = headStyleElements[i];\n    if (node.tagName === 'STYLE') {\n      const newHeadStyleElements = document.createElement(node.tagName);\n      const sheet = node.sheet;\n      if (sheet) {\n        let styleCSS = '';\n        for (let j = 0; j < sheet.cssRules.length; j += 1) {\n          if (typeof sheet.cssRules[j].cssText === 'string') {\n            styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n          }\n        }\n        newHeadStyleElements.appendChild(document.createTextNode(styleCSS));\n        document.head.appendChild(newHeadStyleElements);\n      }\n    } else if (node.getAttribute('href')) {\n      // If `href` tag is empty, avoid loading these links\n\n      const newHeadStyleElements = document.createElement(node.tagName);\n      for (let j = 0; j < node.attributes.length; j += 1) {\n        const attr = node.attributes[j];\n        if (attr) {\n          newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n        }\n      }\n      stylesheetLoadPromises.push(new Promise(resolve => {\n        newHeadStyleElements.addEventListener('load', () => resolve());\n      }));\n      document.head.appendChild(newHeadStyleElements);\n    }\n  }\n  return stylesheetLoadPromises;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,eAAeA,CAACC,QAAQ,EAAEC,IAAI,EAAE;EAC9C,MAAMC,sBAAsB,GAAG,EAAE;EACjC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,gBAAgB,CAAC,+BAA+B,CAAC;EAChF,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,iBAAiB,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IACpD,MAAME,IAAI,GAAGJ,iBAAiB,CAACE,CAAC,CAAC;IACjC,IAAIE,IAAI,CAACC,OAAO,KAAK,OAAO,EAAE;MAC5B,MAAMC,oBAAoB,GAAGT,QAAQ,CAACU,aAAa,CAACH,IAAI,CAACC,OAAO,CAAC;MACjE,MAAMG,KAAK,GAAGJ,IAAI,CAACI,KAAK;MACxB,IAAIA,KAAK,EAAE;QACT,IAAIC,QAAQ,GAAG,EAAE;QACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,QAAQ,CAACR,MAAM,EAAEO,CAAC,IAAI,CAAC,EAAE;UACjD,IAAI,OAAOF,KAAK,CAACG,QAAQ,CAACD,CAAC,CAAC,CAACE,OAAO,KAAK,QAAQ,EAAE;YACjDH,QAAQ,IAAI,GAAGD,KAAK,CAACG,QAAQ,CAACD,CAAC,CAAC,CAACE,OAAO,MAAM;UAChD;QACF;QACAN,oBAAoB,CAACO,WAAW,CAAChB,QAAQ,CAACiB,cAAc,CAACL,QAAQ,CAAC,CAAC;QACnEZ,QAAQ,CAACkB,IAAI,CAACF,WAAW,CAACP,oBAAoB,CAAC;MACjD;IACF,CAAC,MAAM,IAAIF,IAAI,CAACY,YAAY,CAAC,MAAM,CAAC,EAAE;MACpC;;MAEA,MAAMV,oBAAoB,GAAGT,QAAQ,CAACU,aAAa,CAACH,IAAI,CAACC,OAAO,CAAC;MACjE,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,IAAI,CAACa,UAAU,CAACd,MAAM,EAAEO,CAAC,IAAI,CAAC,EAAE;QAClD,MAAMQ,IAAI,GAAGd,IAAI,CAACa,UAAU,CAACP,CAAC,CAAC;QAC/B,IAAIQ,IAAI,EAAE;UACRZ,oBAAoB,CAACa,YAAY,CAACD,IAAI,CAACE,QAAQ,EAAEF,IAAI,CAACG,SAAS,IAAI,EAAE,CAAC;QACxE;MACF;MACAtB,sBAAsB,CAACuB,IAAI,CAAC,IAAIC,OAAO,CAACC,OAAO,IAAI;QACjDlB,oBAAoB,CAACmB,gBAAgB,CAAC,MAAM,EAAE,MAAMD,OAAO,CAAC,CAAC,CAAC;MAChE,CAAC,CAAC,CAAC;MACH3B,QAAQ,CAACkB,IAAI,CAACF,WAAW,CAACP,oBAAoB,CAAC;IACjD;EACF;EACA,OAAOP,sBAAsB;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}